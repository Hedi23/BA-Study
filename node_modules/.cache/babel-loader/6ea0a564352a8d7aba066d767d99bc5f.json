{"ast":null,"code":"var _jsxFileName = \"/Users/Hedi/Documents/S/WS20:21/Study/src/components/emailWindow.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { Snackbar } from \"@material-ui/core\";\nimport EmailTopBar from \"./EmailTopBar\";\nimport HeaderInfoEmail from \"./HeaderInfoEmail\";\nimport LoadingOverlay from \"react-loading-overlay\"; //new code\n\nimport BlockingLinkModal from \"./mails/BlockingLinkModal\"; //new code\n\nimport random from \"lodash/random\"; //new code\n\nclass EmailWindow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      printMessage: false,\n      isActive: false,\n      //overlay modal value\n      style: {\n        display: \"none\"\n      },\n      alertTemplate: random(1, 3),\n      //use number to decide template\n      cssClass: \"phishingLink\"\n    };\n\n    this.resetSelectedTab = () => {\n      this.props.resetSelectedTab(); //this.props.onNewEmail(undefined);\n    };\n\n    this.componentWillUnmount = () => {\n      clearInterval(this.collectionInterval);\n    };\n\n    this.setWarning = e => {\n      e.preventDefault();\n      this.setState(previous => ({\n        isActive: !previous.isActive\n      }));\n    };\n\n    this.getScrollAmount = () => {\n      let scrollAmount = document.getElementById(\"scrollContainer\").scrollTop;\n      this.props.inEmailScrollAmount(scrollAmount);\n    };\n  }\n\n  componentDidMount() {\n    this.collectionInterval = setInterval(this.getScrollAmount, 500); //alert(this.state.alertTemplate);\n    //new code to switch template\n\n    if (this.state.alertTemplate == 1) //select overlay template\n      {\n        this.setState({\n          isActive: true\n        });\n        this.setState({\n          display: \"block\"\n        });\n      } else if (this.state.alertTemplate == 2) //selects red button highlight\n      {\n        this.setState({\n          cssClass: \"phishingLink1\"\n        });\n      } else if (this.state.alertTemplate == 3) //selects gray button highlight\n      {\n        this.setState({\n          cssClass: \"phishingLink2\"\n        });\n      }\n  }\n\n  render() {\n    const handleClick = () => {\n      this.setState({\n        printMessage: true\n      });\n    };\n\n    const handleClose = () => {\n      this.setState({\n        printMessage: false\n      });\n    };\n\n    const SpecificEmail = this.props.Email.mail;\n    let email = this.props.Email;\n    var styles = {\n      buttonsSidebar: {\n        color: \"#2E2E2E\",\n        margin: \"10px\",\n        backgroundColor: \"#f2f2f2\"\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseEnter: () => {\n        this.props.insideEmailInfo(true, \"InEmailWindow\");\n      },\n      onMouseLeave: () => {\n        this.props.insideEmailInfo(false, \"InEmailWindow\");\n      },\n      onMouseOver: () => {\n        this.props.insideEmailInfo(true, \"InEmailWindow\");\n      },\n      style: {\n        border: \"0.5px solid grey\",\n        height: \"950px\",\n        borderRadius: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: styles.buttonsSidebar,\n      startIcon: /*#__PURE__*/React.createElement(EmailIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 26\n        }\n      }),\n      variant: \"outlined\",\n      onClick: () => {\n        this.props.onMoveToImportant(email.mail.defaultProps.keyID);\n        this.resetSelectedTab();\n        handleClick();\n      },\n      onMouseEnter: () => {\n        this.props.insideEmailInfo(true, \"InMoveToImportantButton\");\n      },\n      onMouseLeave: () => {\n        this.props.insideEmailInfo(false, \"InMoveToImportantButton\");\n      },\n      onMouseOver: () => {\n        this.props.insideEmailInfo(true, \"InMoveToImportantButton\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"Move to Inbox\", /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.printMessage,\n      autoHideDuration: 1500,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(ErrorIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 26\n        }\n      }),\n      style: styles.buttonsSidebar,\n      variant: \"outlined\",\n      onClick: () => {\n        this.props.onMoveToSpam(email.mail.defaultProps.keyID);\n        this.resetSelectedTab();\n        handleClick();\n      },\n      onMouseEnter: () => {\n        this.props.insideEmailInfo(true, \"InMoveToSpamButton\");\n      },\n      onMouseLeave: () => {\n        this.props.insideEmailInfo(false, \"InMoveToSpamButton\");\n      },\n      onMouseOver: () => {\n        this.props.insideEmailInfo(true, \"InMoveToSpamButton\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Move to Spam\", /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.printMessage,\n      autoHideDuration: 1500,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      style: styles.buttonsSidebar,\n      startIcon: /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 26\n        }\n      }),\n      variant: \"outlined\",\n      onClick: () => {\n        this.props.onMoveToBin(email.mail.defaultProps.keyID);\n        this.resetSelectedTab();\n        handleClick();\n      },\n      onMouseEnter: () => {\n        this.props.insideEmailInfo(true, \"InMoveToBinButton\");\n      },\n      onMouseLeave: () => {\n        this.props.insideEmailInfo(false, \"InMoveToBinButton\");\n      },\n      onMouseOver: () => {\n        this.props.insideEmailInfo(true, \"InMoveToBinButton\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, \"Move to Bin\", /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.printMessage,\n      autoHideDuration: 1000,\n      message: \"Email moved\",\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(EmailTopBar, {\n      onMoveEmailBackward: this.props.onMoveEmailBackward,\n      onMoveEmailForward: this.props.onMoveEmailForward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(HeaderInfoEmail, {\n      Email: email,\n      emailAdress: this.props.emailAdress,\n      insideEmailInfo: this.props.insideEmailInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(LoadingOverlay, {\n      active: this.state.isActive,\n      text: \"This link might be phishing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"scrollContainer\",\n      className: this.state.cssClass,\n      style: {\n        marginLeft: \"30px\",\n        marginTop: \"5px\",\n        overflowY: \"scroll\",\n        width: \"710px\",\n        height: \"650px\",\n        backgroundColor: \"white\"\n      },\n      onMouseEnter: () => {\n        this.props.insideEmailInfo(true, \"InEmailBody\");\n      },\n      onMouseLeave: () => {\n        this.props.insideEmailInfo(false, \"InEmailBody\");\n      },\n      onMouseOver: () => {\n        this.props.insideEmailInfo(true, \"InEmailBody\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(SpecificEmail, {\n      userName: this.props.userName,\n      emailAdress: this.props.emailAdress,\n      insideEmailInfo: this.props.insideEmailInfo,\n      clickedLink: this.props.clickedLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal fade\",\n      id: \"blockingLinkModal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      style: this.state.style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(BlockingLinkModal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }\n    })))));\n  }\n\n}\n\nexport default EmailWindow;","map":{"version":3,"sources":["/Users/Hedi/Documents/S/WS20:21/Study/src/components/emailWindow.js"],"names":["React","Component","Button","DeleteIcon","EmailIcon","ErrorIcon","Snackbar","EmailTopBar","HeaderInfoEmail","LoadingOverlay","BlockingLinkModal","random","EmailWindow","state","printMessage","isActive","style","display","alertTemplate","cssClass","resetSelectedTab","props","componentWillUnmount","clearInterval","collectionInterval","setWarning","e","preventDefault","setState","previous","getScrollAmount","scrollAmount","document","getElementById","scrollTop","inEmailScrollAmount","componentDidMount","setInterval","render","handleClick","handleClose","SpecificEmail","Email","mail","email","styles","buttonsSidebar","color","margin","backgroundColor","insideEmailInfo","border","height","borderRadius","onMoveToImportant","defaultProps","keyID","vertical","horizontal","onMoveToSpam","onMoveToBin","onMoveEmailBackward","onMoveEmailForward","emailAdress","marginLeft","marginTop","overflowY","width","userName","clickedLink"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { Snackbar } from \"@material-ui/core\";\n\nimport EmailTopBar from \"./EmailTopBar\";\nimport HeaderInfoEmail from \"./HeaderInfoEmail\";\n\nimport LoadingOverlay from \"react-loading-overlay\"; //new code\nimport BlockingLinkModal from \"./mails/BlockingLinkModal\"; //new code\nimport random from \"lodash/random\"; //new code\nclass EmailWindow extends Component {\n  state = {\n    printMessage: false,\n    isActive: false, //overlay modal value\n    style: {display: \"none\"},\n    alertTemplate: random(1, 3), //use number to decide template\n    cssClass: \"phishingLink\"\n  };\n\n\n  resetSelectedTab = () => {\n    this.props.resetSelectedTab();\n    //this.props.onNewEmail(undefined);\n  };\n\n  componentDidMount() {\n    this.collectionInterval = setInterval(this.getScrollAmount, 500);\n    //alert(this.state.alertTemplate);\n    //new code to switch template\n    if(this.state.alertTemplate == 1) //select overlay template\n    {\n      this.setState({isActive: true});\n      this.setState({display: \"block\"});\n    }\n    else if(this.state.alertTemplate == 2) //selects red button highlight\n    {\n      this.setState({cssClass: \"phishingLink1\"});\n    }\n    else if(this.state.alertTemplate == 3) //selects gray button highlight\n    {\n      this.setState({cssClass: \"phishingLink2\"});\n    }\n    \n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.collectionInterval);\n  };\n  setWarning = (e) => {\n    e.preventDefault();\n    this.setState((previous) => ({\n      isActive: !previous.isActive,\n    }));\n  };\n\n\n  getScrollAmount = () => {\n    let scrollAmount = document.getElementById(\"scrollContainer\").scrollTop;\n    this.props.inEmailScrollAmount(scrollAmount);\n  };\n\n  render() {\n    const handleClick = () => {\n      this.setState({ printMessage: true });\n    };\n\n    const handleClose = () => {\n      this.setState({ printMessage: false });\n    };\n\n    const SpecificEmail = this.props.Email.mail;\n    let email = this.props.Email;\n\n    var styles = {\n      buttonsSidebar: {\n        color: \"#2E2E2E\",\n        margin: \"10px\",\n        backgroundColor: \"#f2f2f2\",\n      },\n    };\n\n    return (\n      <div\n        onMouseEnter={() => {\n          this.props.insideEmailInfo(true, \"InEmailWindow\");\n        }}\n        onMouseLeave={() => {\n          this.props.insideEmailInfo(false, \"InEmailWindow\");\n        }}\n        onMouseOver={() => {\n          this.props.insideEmailInfo(true, \"InEmailWindow\");\n        }}\n        style={{\n          border: \"0.5px solid grey\",\n          height: \"950px\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <div>\n          <div>\n            <Button\n              style={styles.buttonsSidebar}\n              startIcon={<EmailIcon />}\n              variant=\"outlined\"\n              onClick={() => {\n                this.props.onMoveToImportant(email.mail.defaultProps.keyID);\n                this.resetSelectedTab();\n                handleClick();\n              }}\n              onMouseEnter={() => {\n                this.props.insideEmailInfo(true, \"InMoveToImportantButton\");\n              }}\n              onMouseLeave={() => {\n                this.props.insideEmailInfo(false, \"InMoveToImportantButton\");\n              }}\n              onMouseOver={() => {\n                this.props.insideEmailInfo(true, \"InMoveToImportantButton\");\n              }}\n            >\n              Move to Inbox\n              <Snackbar\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                open={this.state.printMessage}\n                autoHideDuration={1500}\n                onClose={handleClose}\n              ></Snackbar>\n            </Button>\n            <Button\n              startIcon={<ErrorIcon />}\n              style={styles.buttonsSidebar}\n              variant=\"outlined\"\n              onClick={() => {\n                this.props.onMoveToSpam(email.mail.defaultProps.keyID);\n                this.resetSelectedTab();\n                handleClick();\n              }}\n              onMouseEnter={() => {\n                this.props.insideEmailInfo(true, \"InMoveToSpamButton\");\n              }}\n              onMouseLeave={() => {\n                this.props.insideEmailInfo(false, \"InMoveToSpamButton\");\n              }}\n              onMouseOver={() => {\n                this.props.insideEmailInfo(true, \"InMoveToSpamButton\");\n              }}\n            >\n              Move to Spam\n              <Snackbar\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                open={this.state.printMessage}\n                autoHideDuration={1500}\n                onClose={handleClose}\n              ></Snackbar>\n            </Button>\n            <Button\n              style={styles.buttonsSidebar}\n              startIcon={<DeleteIcon />}\n              variant=\"outlined\"\n              onClick={() => {\n                this.props.onMoveToBin(email.mail.defaultProps.keyID);\n                this.resetSelectedTab();\n                handleClick();\n              }}\n              onMouseEnter={() => {\n                this.props.insideEmailInfo(true, \"InMoveToBinButton\");\n              }}\n              onMouseLeave={() => {\n                this.props.insideEmailInfo(false, \"InMoveToBinButton\");\n              }}\n              onMouseOver={() => {\n                this.props.insideEmailInfo(true, \"InMoveToBinButton\");\n              }}\n            >\n              Move to Bin\n              <Snackbar\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                open={this.state.printMessage}\n                autoHideDuration={1000}\n                message=\"Email moved\"\n                onClose={handleClose}\n              ></Snackbar>\n            </Button>\n          </div>\n\n          <EmailTopBar\n            onMoveEmailBackward={this.props.onMoveEmailBackward}\n            onMoveEmailForward={this.props.onMoveEmailForward}\n          ></EmailTopBar>\n          <HeaderInfoEmail\n            Email={email}\n            emailAdress={this.props.emailAdress}\n            insideEmailInfo={this.props.insideEmailInfo}\n          ></HeaderInfoEmail>\n        </div>\n        <hr />\n        <LoadingOverlay\n        active={this.state.isActive}\n        text=\"This link might be phishing\"\n      ><div\n          id=\"scrollContainer\"\n          className={this.state.cssClass}\n          style={{\n            marginLeft: \"30px\",\n            marginTop: \"5px\",\n            overflowY: \"scroll\",\n            width: \"710px\",\n            height: \"650px\",\n            backgroundColor: \"white\",\n          }}\n          onMouseEnter={() => {\n            this.props.insideEmailInfo(true, \"InEmailBody\");\n          }}\n          onMouseLeave={() => {\n            this.props.insideEmailInfo(false, \"InEmailBody\");\n          }}\n          onMouseOver={() => {\n            this.props.insideEmailInfo(true, \"InEmailBody\");\n          }}\n        >\n          <SpecificEmail\n            userName={this.props.userName}\n            emailAdress={this.props.emailAdress}\n            insideEmailInfo={this.props.insideEmailInfo}\n            clickedLink={this.props.clickedLink}\n          ></SpecificEmail>\n          <div\n          className=\"modal fade\"\n          id=\"blockingLinkModal\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n          style={this.state.style}\n        >\n          <BlockingLinkModal />\n        </div>\n        </div>\n        \n        \n        </LoadingOverlay>\n      </div>\n    );\n  }\n}\n\nexport default EmailWindow;\n"]},"metadata":{},"sourceType":"module"}