{"ast":null,"code":"var _jsxFileName = \"/Users/Hedi/Documents/S/WS20:21/Study/src/components/Tracker.js\";\nimport React, { Component } from \"react\";\nimport EmailClient from \"./emailClient\";\n\nclass Tracker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserID = () => {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(\"/connect\", requestOptions).then(response => response.json()).then(data => this.setState({\n        userId: data.userID\n      })).then(() => this.props.userID(this.state.userId));\n    };\n\n    this.getNickname = () => {\n      //set nickname from props\n      let nickname = this.props.userInfo.userName;\n      this.setState({\n        userNickname: nickname\n      });\n    };\n\n    this.startCalibration = () => {\n      window.GazeCloudAPI.APIKey = \"GazeBehavior_NonCommercialUse\";\n      window.GazeCloudAPI.StartEyeTracking();\n\n      window.GazeCloudAPI.OnCalibrationComplete = () => {\n        console.log(\"gaze Calibration Complete\");\n        this.startTracking();\n      };\n    };\n\n    this.startTracking = () => {\n      this.collectionInterval = setInterval(this.collectStates, 250);\n      this.sendingIntervall = setInterval(this.sendData, 5000);\n    };\n\n    this.sendData = () => {\n      //Send to Server\n      const data = this.stateCollector;\n      const response = fetch(\"/data\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(this.resetCollector);\n    };\n\n    this.sendAccurcyInfo = () => {\n      //Send to Server\n      const data = this.accuracyCollector;\n      const response = fetch(\"/accuracyInfo\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(console.log(\"sent accuracy info\"));\n    };\n\n    this.collectStates = () => {\n      this.setAllInfo();\n      this.fillCollector();\n      this.resetStates();\n    };\n\n    this.setAllInfo = () => {\n      this.settingsChecker();\n      this.setGazeData();\n      this.setTimestamp();\n    };\n\n    this.setTimestamp = () => {\n      let currentTime = new Date();\n      let newDate = currentTime.getTime();\n      this.setState({\n        timeStamp: newDate\n      });\n    };\n\n    this.fillCollector = () => {\n      this.stateCollector.push(this.state);\n    };\n\n    this.resetCollector = () => {\n      this.stateCollector = [];\n    };\n\n    this.resetStates = () => {\n      this.setState({\n        click: false,\n        clickPosXTransform: 0,\n        clickPosYTransform: 0,\n        clickPosX: 0,\n        clickPosY: 0\n      });\n    };\n\n    this.settingsChecker = () => {\n      let width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      let height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      let marginTop = window.screenTop;\n      let marginLeft = window.screenLeft;\n      let yScroll = Math.round(window.scrollY);\n      this.setState({\n        browserWidth: width,\n        browserHeight: height,\n        marginToScreenLeft: marginLeft,\n        marginToScreenTop: marginTop,\n        pageScrollY: yScroll\n      });\n      this.setTransformedMousePos(this.state.mousePosXPlain, this.state.mousePosYPlain);\n      this.setinEmailPositionY();\n    };\n\n    this.setinEmailPositionY = () => {\n      let inEmailPositionY = this.state.mousePosYPlain + this.state.inEmailScrollAmount;\n      this.setState({\n        inEmailPositionY: inEmailPositionY\n      });\n    };\n\n    this.SetInEmailScrollAmount = scrollAmount => {\n      let roundScrollAmount = Math.round(scrollAmount);\n      this.setState({\n        inEmailScrollAmount: roundScrollAmount\n      });\n    };\n\n    this.setTransformedMousePos = (x, y) => {\n      let clientWidth = 980;\n\n      if (x > this.state.browserWidth / 2 + clientWidth / 2) {\n        var xTran = (x - (this.state.browserWidth / 2 + clientWidth / 2)) * -1;\n        var yTran = y + this.state.pageScrollY;\n      } else {\n        var xTran = (this.state.browserWidth / 2 - clientWidth / 2 - x) * -1;\n        var yTran = y + this.state.pageScrollY;\n      }\n\n      this.setState({\n        mousePosXTransform: xTran,\n        mousePosYTransform: yTran\n      });\n    };\n\n    this.setTransformedGazePos = (x, y) => {\n      let clientWidth = 980;\n\n      if (x > this.state.browserWidth / 2 + clientWidth / 2) {\n        var xGazeTran = (x - (this.state.browserWidth / 2 + clientWidth / 2)) * -1;\n        var yGazeTran = y + this.state.pageScrollY;\n      } else {\n        var xGazeTran = (this.state.browserWidth / 2 - clientWidth / 2 - x) * -1;\n        var yGazeTran = y + this.state.pageScrollY;\n      }\n\n      this.setState({\n        gazeXTransform: xGazeTran,\n        gazeYTransform: yGazeTran\n      });\n    };\n\n    this.handleNewCurrentEmail = emailNr => {\n      let copy = this.state;\n      copy.currentEmail = emailNr;\n      this.setState(copy);\n    };\n\n    this.handleNewCurrentInbox = inboxType => {\n      let copy = this.state;\n      copy.currentInbox = inboxType;\n      copy.currentEmail = 0;\n      this.setState(copy);\n    };\n\n    this.handleInboxResult = finalInboxLocal => {\n      this.resultInbox.resultInbox = finalInboxLocal;\n      this.resultInbox.resultInbox.forEach(element => {\n        element.keyID = element.mail.defaultProps.keyID;\n        element.unseen = element.mail.defaultProps.unseen;\n      });\n      this.resultInbox.userID = this.state.userId;\n      this.sendFinalInbox();\n      clearInterval(this.collectionInterval);\n      clearInterval(this.sendingIntervall);\n    };\n\n    this.sendFinalInbox = () => {\n      //Send to Server\n      const data = this.resultInbox;\n      const response = fetch(\"/resultInbox\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(console.log(\"sent result Inbox\"));\n    };\n\n    this.startAccuracyTest = () => {\n      let copy = this.state;\n      copy.submitted = true;\n      this.setState(copy);\n    };\n\n    this.collectAccuracyData = (circlePos, width, height) => {\n      if (this.collectingAccuracy === false) {\n        this.accuracyIntervall = setInterval(this.fillAccuracyCollector, 100, circlePos, width, height);\n        this.collectingAccuracy = true;\n      } else {\n        clearInterval(this.accuracyIntervall);\n        this.collectingAccuracy = false;\n        this.collectAccuracyData(circlePos, width, height);\n      }\n    };\n\n    this.fillAccuracyCollector = (circlePos, width, height) => {\n      this.setGazeData();\n      let accuracyData = [this.state.userId, circlePos, this.state.gazeX, this.state.gazeY, this.state.validationGaze, width, height];\n      this.accuracyCollector.push(accuracyData);\n    };\n\n    this.stopAccuracyTest = () => {\n      this.sendAccurcyInfo();\n      window.GazeCloudAPI.StopEyeTracking();\n      clearInterval(this.accuracyIntervall);\n    };\n\n    this.handleInsideEmailInfo = (InOrOutput, whichPart) => {\n      if (InOrOutput === true) {\n        let copy = this.state;\n\n        if (whichPart.includes(\"ClickedLink\")) {\n          copy.insideEmailInfo.push(whichPart);\n          const timerForClickedLink = setTimeout(() => {\n            this.deletefromInsideEmailInfo(whichPart);\n          }, 1000);\n          this.setState(copy);\n          this.sendData();\n          return;\n        }\n\n        if (!copy.insideEmailInfo.includes(whichPart)) {\n          copy.insideEmailInfo.push(whichPart);\n        } else {}\n\n        this.setState(copy);\n      } else {\n        this.deletefromInsideEmailInfo(whichPart);\n      }\n    };\n\n    this.handleOutsideEmailInfo = (InOrOutput, whichPart) => {\n      if (InOrOutput === true) {\n        let copy = this.state;\n        copy.outsideEmailInfo.push(whichPart);\n        this.setState(copy);\n      } else {\n        this.deletefromOutsideEmailInfo(whichPart);\n      }\n    };\n\n    this.deletefromInsideEmailInfo = whichToDelete => {\n      let copy = this.state;\n      const index = copy.insideEmailInfo.indexOf(whichToDelete);\n\n      if (index > -1) {\n        copy.insideEmailInfo.splice(index, 1);\n      }\n\n      this.setState(copy);\n    };\n\n    this.deletefromOutsideEmailInfo = whichToDelete => {\n      let copy = this.state;\n      const index = copy.outsideEmailInfo.indexOf(whichToDelete);\n\n      if (index > -1) {\n        copy.outsideEmailInfo.splice(index, 1);\n      }\n\n      this.setState(copy);\n    };\n\n    this.handleClickedInboxButton = (whichButton, insideWhichButton) => {\n      let copy = this.state;\n      copy.insideEmailInfo.push(whichButton);\n      this.setState(copy);\n      const timer2 = setTimeout(() => {\n        this.deletefromInsideEmailInfo(whichButton);\n      }, 1050);\n    };\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseClick = this.handleMouseClick.bind(this);\n    this.state = {\n      currentEmail: 0,\n      //event dependant\n      currentInbox: \"AllInbox\",\n      insideEmailInfo: [],\n      outsideEmailInfo: [],\n      //event dependant\n      mousePosXPlain: 0,\n      mousePosYPlain: 0,\n      mousePosXTransform: 0,\n      mousePosYTransform: 0,\n      click: false,\n      clickPosXTransform: 0,\n      clickPosYTransform: 0,\n      clickPosX: 0,\n      clickPosY: 0,\n      timeStamp: 0,\n      userId: 0,\n      userNickname: \"\",\n      pageScrollY: 0,\n      browserWidth: 0,\n      browserHeight: 0,\n      marginToScreenTop: 0,\n      marginToScreenLeft: 0,\n      inEmailScrollAmount: 0,\n      inEmailPositionY: 0,\n      submitted: false\n    };\n    this.resultInbox = {\n      resultInbox: [],\n      userID: 0\n    };\n    this.stateCollector = [];\n    this.collectionInterval = undefined;\n    this.sendingInterval = undefined;\n    this.accuracyCollector = [];\n    this.accuracyIntervall = undefined;\n    this.collectingAccuracy = false;\n  }\n\n  componentDidMount() {\n    this.getUserID();\n    this.getNickname();\n    this.startCalibration();\n    this.props.userID(this.state.userId);\n  }\n\n  handleMouseMove(event) {\n    let x = event.clientX;\n    let y = event.clientY;\n    this.setState({\n      mousePosXPlain: x,\n      mousePosYPlain: y\n    });\n  }\n\n  handleMouseClick(event) {\n    let copy = this.state;\n    this.handleMouseMove(event);\n    this.setTransformedMousePos(this.state.mousePosXPlain, this.state.mousePosYPlain);\n    copy.click = true;\n    copy.clickPosX = this.state.mousePosXPlain;\n    copy.clickPosY = this.state.mousePosYPlain;\n    this.setState(copy);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseMove: this.handleMouseMove,\n      onClick: this.handleMouseClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(EmailClient, {\n      clickedButton: this.handleClickedInboxButton,\n      inEmailScrollAmount: this.SetInEmailScrollAmount,\n      UserInfo: this.props.userInfo,\n      onNewEmail: this.handleNewCurrentEmail,\n      onNewInbox: this.handleNewCurrentInbox,\n      setInboxResult: this.handleInboxResult,\n      insideEmailInfo: this.handleInsideEmailInfo,\n      outsideEmailInfo: this.handleOutsideEmailInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Tracker;","map":{"version":3,"sources":["/Users/Hedi/Documents/S/WS20:21/Study/src/components/Tracker.js"],"names":["React","Component","EmailClient","Tracker","constructor","props","getUserID","requestOptions","method","headers","fetch","then","response","json","data","setState","userId","userID","state","getNickname","nickname","userInfo","userName","userNickname","startCalibration","window","GazeCloudAPI","APIKey","StartEyeTracking","OnCalibrationComplete","console","log","startTracking","collectionInterval","setInterval","collectStates","sendingIntervall","sendData","stateCollector","Accept","body","JSON","stringify","resetCollector","sendAccurcyInfo","accuracyCollector","setAllInfo","fillCollector","resetStates","settingsChecker","setGazeData","setTimestamp","currentTime","Date","newDate","getTime","timeStamp","push","click","clickPosXTransform","clickPosYTransform","clickPosX","clickPosY","width","innerWidth","document","documentElement","clientWidth","height","innerHeight","clientHeight","marginTop","screenTop","marginLeft","screenLeft","yScroll","Math","round","scrollY","browserWidth","browserHeight","marginToScreenLeft","marginToScreenTop","pageScrollY","setTransformedMousePos","mousePosXPlain","mousePosYPlain","setinEmailPositionY","inEmailPositionY","inEmailScrollAmount","SetInEmailScrollAmount","scrollAmount","roundScrollAmount","x","y","xTran","yTran","mousePosXTransform","mousePosYTransform","setTransformedGazePos","xGazeTran","yGazeTran","gazeXTransform","gazeYTransform","handleNewCurrentEmail","emailNr","copy","currentEmail","handleNewCurrentInbox","inboxType","currentInbox","handleInboxResult","finalInboxLocal","resultInbox","forEach","element","keyID","mail","defaultProps","unseen","sendFinalInbox","clearInterval","startAccuracyTest","submitted","collectAccuracyData","circlePos","collectingAccuracy","accuracyIntervall","fillAccuracyCollector","accuracyData","gazeX","gazeY","validationGaze","stopAccuracyTest","StopEyeTracking","handleInsideEmailInfo","InOrOutput","whichPart","includes","insideEmailInfo","timerForClickedLink","setTimeout","deletefromInsideEmailInfo","handleOutsideEmailInfo","outsideEmailInfo","deletefromOutsideEmailInfo","whichToDelete","index","indexOf","splice","handleClickedInboxButton","whichButton","insideWhichButton","timer2","handleMouseMove","bind","handleMouseClick","undefined","sendingInterval","componentDidMount","event","clientX","clientY","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport EmailClient from \"./emailClient\";\r\n\r\nclass Tracker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleMouseClick = this.handleMouseClick.bind(this);\r\n    this.state = {\r\n      currentEmail: 0, //event dependant\r\n      currentInbox: \"AllInbox\",\r\n      insideEmailInfo: [],\r\n      outsideEmailInfo: [], //event dependant\r\n      mousePosXPlain: 0,\r\n      mousePosYPlain: 0,\r\n      mousePosXTransform: 0,\r\n      mousePosYTransform: 0,\r\n      click: false,\r\n      clickPosXTransform: 0,\r\n      clickPosYTransform: 0,\r\n      clickPosX: 0,\r\n      clickPosY: 0,\r\n      timeStamp: 0,\r\n      userId: 0,\r\n      userNickname: \"\",\r\n      pageScrollY: 0,\r\n      browserWidth: 0,\r\n      browserHeight: 0,\r\n      marginToScreenTop: 0,\r\n      marginToScreenLeft: 0,\r\n      inEmailScrollAmount: 0,\r\n      inEmailPositionY: 0,\r\n\r\n      submitted: false,\r\n    };\r\n\r\n    this.resultInbox = { resultInbox: [], userID: 0 };\r\n    this.stateCollector = [];\r\n    this.collectionInterval = undefined;\r\n    this.sendingInterval = undefined;\r\n    this.accuracyCollector = [];\r\n    this.accuracyIntervall = undefined;\r\n    this.collectingAccuracy = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserID();\r\n    this.getNickname();\r\n    this.startCalibration();\r\n    this.props.userID(this.state.userId);\r\n  }\r\n\r\n  getUserID = () => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    fetch(\"/connect\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ userId: data.userID }))\r\n      .then(() => this.props.userID(this.state.userId));\r\n  };\r\n\r\n  getNickname = () => {\r\n    //set nickname from props\r\n    let nickname = this.props.userInfo.userName;\r\n    this.setState({ userNickname: nickname });\r\n  };\r\n\r\n  startCalibration = () => {\r\n    window.GazeCloudAPI.APIKey = \"GazeBehavior_NonCommercialUse\";\r\n    window.GazeCloudAPI.StartEyeTracking();\r\n    window.GazeCloudAPI.OnCalibrationComplete = () => {\r\n      console.log(\"gaze Calibration Complete\");\r\n      this.startTracking();\r\n    };\r\n  };\r\n\r\n  startTracking = () => {\r\n    this.collectionInterval = setInterval(this.collectStates, 250);\r\n    this.sendingIntervall = setInterval(this.sendData, 5000);\r\n  };\r\n\r\n  sendData = () => {\r\n    //Send to Server\r\n    const data = this.stateCollector;\r\n    const response = fetch(\"/data\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then(this.resetCollector);\r\n  };\r\n\r\n  sendAccurcyInfo = () => {\r\n    //Send to Server\r\n    const data = this.accuracyCollector;\r\n    const response = fetch(\"/accuracyInfo\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then(console.log(\"sent accuracy info\"));\r\n  };\r\n\r\n  collectStates = () => {\r\n    this.setAllInfo();\r\n    this.fillCollector();\r\n    this.resetStates();\r\n  };\r\n\r\n  setAllInfo = () => {\r\n    this.settingsChecker();\r\n    this.setGazeData();\r\n    this.setTimestamp();\r\n  };\r\n\r\n  setTimestamp = () => {\r\n    let currentTime = new Date();\r\n    let newDate = currentTime.getTime();\r\n    this.setState({ timeStamp: newDate });\r\n  };\r\n\r\n  fillCollector = () => {\r\n    this.stateCollector.push(this.state);\r\n  };\r\n\r\n  resetCollector = () => {\r\n    this.stateCollector = [];\r\n  };\r\n\r\n  resetStates = () => {\r\n    this.setState({\r\n      click: false,\r\n      clickPosXTransform: 0,\r\n      clickPosYTransform: 0,\r\n      clickPosX: 0,\r\n      clickPosY: 0,\r\n    });\r\n  };\r\n\r\n  handleMouseMove(event) {\r\n    let x = event.clientX;\r\n    let y = event.clientY;\r\n    this.setState({ mousePosXPlain: x, mousePosYPlain: y });\r\n  }\r\n\r\n  settingsChecker = () => {\r\n    let width =\r\n      window.innerWidth ||\r\n      document.documentElement.clientWidth ||\r\n      document.body.clientWidth;\r\n\r\n    let height =\r\n      window.innerHeight ||\r\n      document.documentElement.clientHeight ||\r\n      document.body.clientHeight;\r\n\r\n    let marginTop = window.screenTop;\r\n    let marginLeft = window.screenLeft;\r\n\r\n    let yScroll = Math.round(window.scrollY);\r\n\r\n    this.setState({\r\n      browserWidth: width,\r\n      browserHeight: height,\r\n      marginToScreenLeft: marginLeft,\r\n      marginToScreenTop: marginTop,\r\n      pageScrollY: yScroll,\r\n    });\r\n\r\n    this.setTransformedMousePos(\r\n      this.state.mousePosXPlain,\r\n      this.state.mousePosYPlain\r\n    );\r\n\r\n    this.setinEmailPositionY();\r\n  };\r\n\r\n  setinEmailPositionY = () => {\r\n    let inEmailPositionY =\r\n      this.state.mousePosYPlain + this.state.inEmailScrollAmount;\r\n    this.setState({ inEmailPositionY: inEmailPositionY });\r\n  };\r\n\r\n  SetInEmailScrollAmount = (scrollAmount) => {\r\n    let roundScrollAmount = Math.round(scrollAmount);\r\n    this.setState({ inEmailScrollAmount: roundScrollAmount });\r\n  };\r\n\r\n  setTransformedMousePos = (x, y) => {\r\n    let clientWidth = 980;\r\n    if (x > this.state.browserWidth / 2 + clientWidth / 2) {\r\n      var xTran = (x - (this.state.browserWidth / 2 + clientWidth / 2)) * -1;\r\n      var yTran = y + this.state.pageScrollY;\r\n    } else {\r\n      var xTran = (this.state.browserWidth / 2 - clientWidth / 2 - x) * -1;\r\n      var yTran = y + this.state.pageScrollY;\r\n    }\r\n    this.setState({ mousePosXTransform: xTran, mousePosYTransform: yTran });\r\n  };\r\n\r\n  setTransformedGazePos = (x, y) => {\r\n    let clientWidth = 980;\r\n\r\n    if (x > this.state.browserWidth / 2 + clientWidth / 2) {\r\n      var xGazeTran =\r\n        (x - (this.state.browserWidth / 2 + clientWidth / 2)) * -1;\r\n      var yGazeTran = y + this.state.pageScrollY;\r\n    } else {\r\n      var xGazeTran = (this.state.browserWidth / 2 - clientWidth / 2 - x) * -1;\r\n      var yGazeTran = y + this.state.pageScrollY;\r\n    }\r\n    this.setState({ gazeXTransform: xGazeTran, gazeYTransform: yGazeTran });\r\n  };\r\n\r\n  handleMouseClick(event) {\r\n    let copy = this.state;\r\n    this.handleMouseMove(event);\r\n    this.setTransformedMousePos(\r\n      this.state.mousePosXPlain,\r\n      this.state.mousePosYPlain\r\n    );\r\n    copy.click = true;\r\n    copy.clickPosX = this.state.mousePosXPlain;\r\n    copy.clickPosY = this.state.mousePosYPlain;\r\n    this.setState(copy);\r\n  }\r\n\r\n  handleNewCurrentEmail = (emailNr) => {\r\n    let copy = this.state;\r\n    copy.currentEmail = emailNr;\r\n    this.setState(copy);\r\n  };\r\n\r\n  handleNewCurrentInbox = (inboxType) => {\r\n    let copy = this.state;\r\n    copy.currentInbox = inboxType;\r\n    copy.currentEmail = 0;\r\n    this.setState(copy);\r\n  };\r\n\r\n  handleInboxResult = (finalInboxLocal) => {\r\n    this.resultInbox.resultInbox = finalInboxLocal;\r\n    this.resultInbox.resultInbox.forEach((element) => {\r\n      element.keyID = element.mail.defaultProps.keyID;\r\n      element.unseen = element.mail.defaultProps.unseen;\r\n    });\r\n    this.resultInbox.userID = this.state.userId;\r\n    this.sendFinalInbox();\r\n    clearInterval(this.collectionInterval);\r\n    clearInterval(this.sendingIntervall);\r\n  };\r\n\r\n  sendFinalInbox = () => {\r\n    //Send to Server\r\n\r\n    const data = this.resultInbox;\r\n    const response = fetch(\"/resultInbox\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then(console.log(\"sent result Inbox\"));\r\n  };\r\n\r\n  startAccuracyTest = () => {\r\n    let copy = this.state;\r\n    copy.submitted = true;\r\n    this.setState(copy);\r\n  };\r\n\r\n  collectAccuracyData = (circlePos, width, height) => {\r\n    if (this.collectingAccuracy === false) {\r\n      this.accuracyIntervall = setInterval(\r\n        this.fillAccuracyCollector,\r\n        100,\r\n        circlePos,\r\n        width,\r\n        height\r\n      );\r\n      this.collectingAccuracy = true;\r\n    } else {\r\n      clearInterval(this.accuracyIntervall);\r\n      this.collectingAccuracy = false;\r\n      this.collectAccuracyData(circlePos, width, height);\r\n    }\r\n  };\r\n\r\n  fillAccuracyCollector = (circlePos, width, height) => {\r\n    this.setGazeData();\r\n    let accuracyData = [\r\n      this.state.userId,\r\n      circlePos,\r\n      this.state.gazeX,\r\n      this.state.gazeY,\r\n      this.state.validationGaze,\r\n      width,\r\n      height,\r\n    ];\r\n    this.accuracyCollector.push(accuracyData);\r\n  };\r\n\r\n  stopAccuracyTest = () => {\r\n    this.sendAccurcyInfo();\r\n    window.GazeCloudAPI.StopEyeTracking();\r\n    clearInterval(this.accuracyIntervall);\r\n  };\r\n\r\n  handleInsideEmailInfo = (InOrOutput, whichPart) => {\r\n    if (InOrOutput === true) {\r\n      let copy = this.state;\r\n      if (whichPart.includes(\"ClickedLink\")) {\r\n        copy.insideEmailInfo.push(whichPart);\r\n        const timerForClickedLink = setTimeout(() => {\r\n          this.deletefromInsideEmailInfo(whichPart);\r\n        }, 1000);\r\n        this.setState(copy);\r\n        this.sendData();\r\n        return;\r\n      }\r\n      if (!copy.insideEmailInfo.includes(whichPart)) {\r\n        copy.insideEmailInfo.push(whichPart);\r\n      } else {\r\n      }\r\n      this.setState(copy);\r\n    } else {\r\n      this.deletefromInsideEmailInfo(whichPart);\r\n    }\r\n  };\r\n\r\n  handleOutsideEmailInfo = (InOrOutput, whichPart) => {\r\n    if (InOrOutput === true) {\r\n      let copy = this.state;\r\n      copy.outsideEmailInfo.push(whichPart);\r\n      this.setState(copy);\r\n    } else {\r\n      this.deletefromOutsideEmailInfo(whichPart);\r\n    }\r\n  };\r\n\r\n  deletefromInsideEmailInfo = (whichToDelete) => {\r\n    let copy = this.state;\r\n    const index = copy.insideEmailInfo.indexOf(whichToDelete);\r\n    if (index > -1) {\r\n      copy.insideEmailInfo.splice(index, 1);\r\n    }\r\n    this.setState(copy);\r\n  };\r\n\r\n  deletefromOutsideEmailInfo = (whichToDelete) => {\r\n    let copy = this.state;\r\n    const index = copy.outsideEmailInfo.indexOf(whichToDelete);\r\n    if (index > -1) {\r\n      copy.outsideEmailInfo.splice(index, 1);\r\n    }\r\n    this.setState(copy);\r\n  };\r\n\r\n  handleClickedInboxButton = (whichButton, insideWhichButton) => {\r\n    let copy = this.state;\r\n    copy.insideEmailInfo.push(whichButton);\r\n    this.setState(copy);\r\n\r\n    const timer2 = setTimeout(() => {\r\n      this.deletefromInsideEmailInfo(whichButton);\r\n    }, 1050);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div onMouseMove={this.handleMouseMove} onClick={this.handleMouseClick}>\r\n        <EmailClient\r\n          clickedButton={this.handleClickedInboxButton}\r\n          inEmailScrollAmount={this.SetInEmailScrollAmount}\r\n          UserInfo={this.props.userInfo}\r\n          onNewEmail={this.handleNewCurrentEmail}\r\n          onNewInbox={this.handleNewCurrentInbox}\r\n          setInboxResult={this.handleInboxResult}\r\n          insideEmailInfo={this.handleInsideEmailInfo}\r\n          outsideEmailInfo={this.handleOutsideEmailInfo}\r\n        ></EmailClient>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracker;\r\n"]},"metadata":{},"sourceType":"module"}