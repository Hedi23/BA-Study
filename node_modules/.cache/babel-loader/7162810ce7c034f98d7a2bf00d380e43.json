{"ast":null,"code":"var _jsxFileName = \"/Users/Hedi/Documents/S/WS20:21/Bachelorarbeit/BA-Study/src/components/emailWindow.js\";\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { Snackbar } from \"@material-ui/core\";\nimport EmailTopBar from \"./EmailTopBar\";\nimport HeaderInfoEmail from \"./HeaderInfoEmail\";\n\nclass EmailWindow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      printMessage: false,\n      isActive: false,\n      //overlay modal value\n      style: {\n        display: \"none\"\n      },\n      cssClass: \"phishingLink\",\n      spinner: false,\n      email: \"\"\n    };\n\n    this.resetSelectedTab = () => {\n      this.props.resetSelectedTab(); //this.props.onNewEmail(undefined);\n    };\n\n    this.componentWillUnmount = () => {\n      clearInterval(this.collectionInterval);\n      clearInterval(this.interval);\n    };\n\n    this.setWarning = e => {\n      e.preventDefault();\n      this.setState(previous => ({\n        isActive: !previous.isActive\n      }));\n    };\n\n    this.getScrollAmount = () => {\n      let scrollAmount = document.getElementById(\"scrollContainer\").scrollTop;\n      this.props.inEmailScrollAmount(scrollAmount);\n    };\n  }\n\n  componentDidMount() {\n    // Count Every Second spent on this opened Mail\n    if (this.props.parentName === \"AllInbox\") {\n      this.interval = setInterval(() => {\n        return this.props.timeCount(this.props.Email.mail.defaultProps);\n      }, 1000);\n    }\n\n    this.collectionInterval = setInterval(this.getScrollAmount, 500); //alert(this.state.alertTemplate);\n    //new code to switch template\n\n    if (this.state.alertTemplate == 1) {\n      //select overlay template\n      this.setState({\n        isActive: true\n      });\n      this.setState({\n        style: {\n          display: \"block\"\n        }\n      });\n    } else if (this.state.alertTemplate == 2) {\n      //selects red button highlight\n      this.setState({\n        cssClass: \"phishingLink1\"\n      });\n    } else if (this.state.alertTemplate == 3) {\n      //selects gray button highlight\n      this.setState({\n        cssClass: \"phishingLink2\"\n      });\n    }\n  }\n\n  render() {\n    const handleClick = () => {\n      this.setState({\n        printMessage: true\n      });\n    };\n\n    const handleClose = () => {\n      this.setState({\n        printMessage: false\n      });\n    };\n\n    const SpecificEmail = this.props.Email.mail;\n    let email = this.props.Email;\n    var styles = {\n      buttonsSidebar: {\n        color: \"#2E2E2E\",\n        margin: \"10px\",\n        backgroundColor: \"#f2f2f2\"\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseEnter: () => {\n        this.props.insideEmailInfo(true, \"InEmailWindow\");\n      },\n      onMouseLeave: () => {\n        this.props.insideEmailInfo(false, \"InEmailWindow\");\n      },\n      onMouseOver: () => {\n        this.props.insideEmailInfo(true, \"InEmailWindow\");\n      },\n      style: {\n        border: \"0.5px solid grey\",\n        height: \"950px\",\n        borderRadius: \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      style: styles.buttonsSidebar,\n      startIcon: /*#__PURE__*/React.createElement(EmailIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 26\n        }\n      }),\n      variant: \"outlined\",\n      onClick: () => {\n        this.props.onMoveToImportant(email.mail.defaultProps.keyID);\n        this.resetSelectedTab();\n        handleClick();\n      },\n      onMouseEnter: () => {\n        this.props.insideEmailInfo(true, \"InMoveToImportantButton\");\n      },\n      onMouseLeave: () => {\n        this.props.insideEmailInfo(false, \"InMoveToImportantButton\");\n      },\n      onMouseOver: () => {\n        this.props.insideEmailInfo(true, \"InMoveToImportantButton\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Move to Inbox\", /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.printMessage,\n      autoHideDuration: 1500,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      startIcon: /*#__PURE__*/React.createElement(ErrorIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 26\n        }\n      }),\n      style: styles.buttonsSidebar,\n      variant: \"outlined\",\n      onClick: () => {\n        this.props.onMoveToSpam(email.mail.defaultProps.keyID);\n        this.resetSelectedTab();\n        handleClick();\n      },\n      onMouseEnter: () => {\n        this.props.insideEmailInfo(true, \"InMoveToSpamButton\");\n      },\n      onMouseLeave: () => {\n        this.props.insideEmailInfo(false, \"InMoveToSpamButton\");\n      },\n      onMouseOver: () => {\n        this.props.insideEmailInfo(true, \"InMoveToSpamButton\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, \"Move to Spam\", /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.printMessage,\n      autoHideDuration: 1500,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      style: styles.buttonsSidebar,\n      startIcon: /*#__PURE__*/React.createElement(DeleteIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 26\n        }\n      }),\n      variant: \"outlined\",\n      onClick: () => {\n        this.props.onMoveToBin(email.mail.defaultProps.keyID);\n        this.resetSelectedTab();\n        handleClick();\n      },\n      onMouseEnter: () => {\n        this.props.insideEmailInfo(true, \"InMoveToBinButton\");\n      },\n      onMouseLeave: () => {\n        this.props.insideEmailInfo(false, \"InMoveToBinButton\");\n      },\n      onMouseOver: () => {\n        this.props.insideEmailInfo(true, \"InMoveToBinButton\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, \"Move to Bin\", /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.printMessage,\n      autoHideDuration: 1000,\n      message: \"Email moved\",\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(EmailTopBar, {\n      onMoveEmailBackward: this.props.onMoveEmailBackward,\n      onMoveEmailForward: this.props.onMoveEmailForward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(HeaderInfoEmail, {\n      Email: email,\n      emailAdress: this.props.emailAdress,\n      insideEmailInfo: this.props.insideEmailInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"scrollContainer\",\n      className: this.state.cssClass,\n      style: {\n        marginLeft: \"30px\",\n        marginTop: \"5px\",\n        overflowY: \"scroll\",\n        width: \"710px\",\n        height: \"650px\",\n        backgroundColor: \"white\"\n      },\n      onMouseEnter: () => {\n        this.props.insideEmailInfo(true, \"InEmailBody\");\n      },\n      onMouseLeave: () => {\n        this.props.insideEmailInfo(false, \"InEmailBody\");\n      },\n      onMouseOver: () => {\n        this.props.insideEmailInfo(true, \"InEmailBody\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SpecificEmail, {\n      userName: this.props.userName,\n      emailAdress: this.props.emailAdress,\n      insideEmailInfo: this.props.insideEmailInfo,\n      clickedLink: this.props.clickedLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default EmailWindow;","map":{"version":3,"sources":["/Users/Hedi/Documents/S/WS20:21/Bachelorarbeit/BA-Study/src/components/emailWindow.js"],"names":["React","Component","Button","DeleteIcon","EmailIcon","ErrorIcon","Snackbar","EmailTopBar","HeaderInfoEmail","EmailWindow","state","printMessage","isActive","style","display","cssClass","spinner","email","resetSelectedTab","props","componentWillUnmount","clearInterval","collectionInterval","interval","setWarning","e","preventDefault","setState","previous","getScrollAmount","scrollAmount","document","getElementById","scrollTop","inEmailScrollAmount","componentDidMount","parentName","setInterval","timeCount","Email","mail","defaultProps","alertTemplate","render","handleClick","handleClose","SpecificEmail","styles","buttonsSidebar","color","margin","backgroundColor","insideEmailInfo","border","height","borderRadius","onMoveToImportant","keyID","vertical","horizontal","onMoveToSpam","onMoveToBin","onMoveEmailBackward","onMoveEmailForward","emailAdress","marginLeft","marginTop","overflowY","width","userName","clickedLink"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCS,KADkC,GAC1B;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAEW;AACjBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAHD;AAINC,MAAAA,QAAQ,EAAE,cAJJ;AAKNC,MAAAA,OAAO,EAAE,KALH;AAMNC,MAAAA,KAAK,EAAE;AAND,KAD0B;;AAAA,SAUlCC,gBAVkC,GAUf,MAAM;AACvB,WAAKC,KAAL,CAAWD,gBAAX,GADuB,CAEvB;AACD,KAbiC;;AAAA,SAuClCE,oBAvCkC,GAuCX,MAAM;AAC3BC,MAAAA,aAAa,CAAC,KAAKC,kBAAN,CAAb;AACAD,MAAAA,aAAa,CAAC,KAAKE,QAAN,CAAb;AACD,KA1CiC;;AAAA,SA2ClCC,UA3CkC,GA2CpBC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAeC,QAAD,KAAe;AAC3BhB,QAAAA,QAAQ,EAAE,CAACgB,QAAQ,CAAChB;AADO,OAAf,CAAd;AAGD,KAhDiC;;AAAA,SAkDlCiB,eAlDkC,GAkDhB,MAAM;AACtB,UAAIC,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,EAA2CC,SAA9D;AACA,WAAKd,KAAL,CAAWe,mBAAX,CAA+BJ,YAA/B;AACD,KArDiC;AAAA;;AAelCK,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAI,KAAKhB,KAAL,CAAWiB,UAAX,KAA0B,UAA9B,EAA0C;AACxC,WAAKb,QAAL,GAAgBc,WAAW,CAAC,MAAM;AAChC,eAAO,KAAKlB,KAAL,CAAWmB,SAAX,CAAqB,KAAKnB,KAAL,CAAWoB,KAAX,CAAiBC,IAAjB,CAAsBC,YAA3C,CAAP;AACD,OAF0B,EAExB,IAFwB,CAA3B;AAGD;;AAED,SAAKnB,kBAAL,GAA0Be,WAAW,CAAC,KAAKR,eAAN,EAAuB,GAAvB,CAArC,CARkB,CASlB;AACA;;AACA,QAAI,KAAKnB,KAAL,CAAWgC,aAAX,IAA4B,CAAhC,EAAmC;AACjC;AACA,WAAKf,QAAL,CAAc;AAAEf,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA,WAAKe,QAAL,CAAc;AAAEd,QAAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX;AAAT,OAAd;AACD,KAJD,MAIO,IAAI,KAAKJ,KAAL,CAAWgC,aAAX,IAA4B,CAAhC,EAAmC;AACxC;AACA,WAAKf,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAHM,MAGA,IAAI,KAAKL,KAAL,CAAWgC,aAAX,IAA4B,CAAhC,EAAmC;AACxC;AACA,WAAKf,QAAL,CAAc;AAAEZ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD;AACF;;AAkBD4B,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,MAAM;AACxB,WAAKjB,QAAL,CAAc;AAAEhB,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KAFD;;AAIA,UAAMkC,WAAW,GAAG,MAAM;AACxB,WAAKlB,QAAL,CAAc;AAAEhB,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KAFD;;AAIA,UAAMmC,aAAa,GAAG,KAAK3B,KAAL,CAAWoB,KAAX,CAAiBC,IAAvC;AACA,QAAIvB,KAAK,GAAG,KAAKE,KAAL,CAAWoB,KAAvB;AAEA,QAAIQ,MAAM,GAAG;AACXC,MAAAA,cAAc,EAAE;AACdC,QAAAA,KAAK,EAAE,SADO;AAEdC,QAAAA,MAAM,EAAE,MAFM;AAGdC,QAAAA,eAAe,EAAE;AAHH;AADL,KAAb;AAQA,wBACE;AACE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKhC,KAAL,CAAWiC,eAAX,CAA2B,IAA3B,EAAiC,eAAjC;AACD,OAHH;AAIE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKjC,KAAL,CAAWiC,eAAX,CAA2B,KAA3B,EAAkC,eAAlC;AACD,OANH;AAOE,MAAA,WAAW,EAAE,MAAM;AACjB,aAAKjC,KAAL,CAAWiC,eAAX,CAA2B,IAA3B,EAAiC,eAAjC;AACD,OATH;AAUE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAELC,QAAAA,MAAM,EAAE,OAFH;AAGLC,QAAAA,YAAY,EAAE;AAHT,OAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAER,MAAM,CAACC,cADhB;AAEE,MAAA,SAAS,eAAE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,aAAK7B,KAAL,CAAWqC,iBAAX,CAA6BvC,KAAK,CAACuB,IAAN,CAAWC,YAAX,CAAwBgB,KAArD;AACA,aAAKvC,gBAAL;AACA0B,QAAAA,WAAW;AACZ,OARH;AASE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKzB,KAAL,CAAWiC,eAAX,CAA2B,IAA3B,EAAiC,yBAAjC;AACD,OAXH;AAYE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKjC,KAAL,CAAWiC,eAAX,CAA2B,KAA3B,EAAkC,yBAAlC;AACD,OAdH;AAeE,MAAA,WAAW,EAAE,MAAM;AACjB,aAAKjC,KAAL,CAAWiC,eAAX,CAA2B,IAA3B,EAAiC,yBAAjC;AACD,OAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAoBE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE;AACZM,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OADhB;AAKE,MAAA,IAAI,EAAE,KAAKjD,KAAL,CAAWC,YALnB;AAME,MAAA,gBAAgB,EAAE,IANpB;AAOE,MAAA,OAAO,EAAEkC,WAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,CADF,eA+BE,oBAAC,MAAD;AACE,MAAA,SAAS,eAAE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADb;AAEE,MAAA,KAAK,EAAEE,MAAM,CAACC,cAFhB;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,aAAK7B,KAAL,CAAWyC,YAAX,CAAwB3C,KAAK,CAACuB,IAAN,CAAWC,YAAX,CAAwBgB,KAAhD;AACA,aAAKvC,gBAAL;AACA0B,QAAAA,WAAW;AACZ,OARH;AASE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKzB,KAAL,CAAWiC,eAAX,CAA2B,IAA3B,EAAiC,oBAAjC;AACD,OAXH;AAYE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKjC,KAAL,CAAWiC,eAAX,CAA2B,KAA3B,EAAkC,oBAAlC;AACD,OAdH;AAeE,MAAA,WAAW,EAAE,MAAM;AACjB,aAAKjC,KAAL,CAAWiC,eAAX,CAA2B,IAA3B,EAAiC,oBAAjC;AACD,OAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAoBE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE;AACZM,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OADhB;AAKE,MAAA,IAAI,EAAE,KAAKjD,KAAL,CAAWC,YALnB;AAME,MAAA,gBAAgB,EAAE,IANpB;AAOE,MAAA,OAAO,EAAEkC,WAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,CA/BF,eA6DE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEE,MAAM,CAACC,cADhB;AAEE,MAAA,SAAS,eAAE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFb;AAGE,MAAA,OAAO,EAAC,UAHV;AAIE,MAAA,OAAO,EAAE,MAAM;AACb,aAAK7B,KAAL,CAAW0C,WAAX,CAAuB5C,KAAK,CAACuB,IAAN,CAAWC,YAAX,CAAwBgB,KAA/C;AACA,aAAKvC,gBAAL;AACA0B,QAAAA,WAAW;AACZ,OARH;AASE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKzB,KAAL,CAAWiC,eAAX,CAA2B,IAA3B,EAAiC,mBAAjC;AACD,OAXH;AAYE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKjC,KAAL,CAAWiC,eAAX,CAA2B,KAA3B,EAAkC,mBAAlC;AACD,OAdH;AAeE,MAAA,WAAW,EAAE,MAAM;AACjB,aAAKjC,KAAL,CAAWiC,eAAX,CAA2B,IAA3B,EAAiC,mBAAjC;AACD,OAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAoBE,oBAAC,QAAD;AACE,MAAA,YAAY,EAAE;AACZM,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OADhB;AAKE,MAAA,IAAI,EAAE,KAAKjD,KAAL,CAAWC,YALnB;AAME,MAAA,gBAAgB,EAAE,IANpB;AAOE,MAAA,OAAO,EAAC,aAPV;AAQE,MAAA,OAAO,EAAEkC,WARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,CA7DF,CADF,eA+FE,oBAAC,WAAD;AACE,MAAA,mBAAmB,EAAE,KAAK1B,KAAL,CAAW2C,mBADlC;AAEE,MAAA,kBAAkB,EAAE,KAAK3C,KAAL,CAAW4C,kBAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/FF,eAmGE,oBAAC,eAAD;AACE,MAAA,KAAK,EAAE9C,KADT;AAEE,MAAA,WAAW,EAAE,KAAKE,KAAL,CAAW6C,WAF1B;AAGE,MAAA,eAAe,EAAE,KAAK7C,KAAL,CAAWiC,eAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnGF,CAhBF,eAyHE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzHF,eA0HE;AACE,MAAA,EAAE,EAAC,iBADL;AAEE,MAAA,SAAS,EAAE,KAAK1C,KAAL,CAAWK,QAFxB;AAGE,MAAA,KAAK,EAAE;AACLkD,QAAAA,UAAU,EAAE,MADP;AAELC,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,SAAS,EAAE,QAHN;AAILC,QAAAA,KAAK,EAAE,OAJF;AAKLd,QAAAA,MAAM,EAAE,OALH;AAMLH,QAAAA,eAAe,EAAE;AANZ,OAHT;AAWE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKhC,KAAL,CAAWiC,eAAX,CAA2B,IAA3B,EAAiC,aAAjC;AACD,OAbH;AAcE,MAAA,YAAY,EAAE,MAAM;AAClB,aAAKjC,KAAL,CAAWiC,eAAX,CAA2B,KAA3B,EAAkC,aAAlC;AACD,OAhBH;AAiBE,MAAA,WAAW,EAAE,MAAM;AACjB,aAAKjC,KAAL,CAAWiC,eAAX,CAA2B,IAA3B,EAAiC,aAAjC;AACD,OAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAqBE,oBAAC,aAAD;AACE,MAAA,QAAQ,EAAE,KAAKjC,KAAL,CAAWkD,QADvB;AAEE,MAAA,WAAW,EAAE,KAAKlD,KAAL,CAAW6C,WAF1B;AAGE,MAAA,eAAe,EAAE,KAAK7C,KAAL,CAAWiC,eAH9B;AAIE,MAAA,WAAW,EAAE,KAAKjC,KAAL,CAAWmD,WAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CA1HF,CADF;AA0LD;;AArQiC;;AAwQpC,eAAe7D,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport { Snackbar } from \"@material-ui/core\";\n\nimport EmailTopBar from \"./EmailTopBar\";\nimport HeaderInfoEmail from \"./HeaderInfoEmail\";\n\nclass EmailWindow extends Component {\n  state = {\n    printMessage: false,\n    isActive: false, //overlay modal value\n    style: { display: \"none\" },\n    cssClass: \"phishingLink\",\n    spinner: false,\n    email: \"\",\n  };\n\n  resetSelectedTab = () => {\n    this.props.resetSelectedTab();\n    //this.props.onNewEmail(undefined);\n  };\n\n  componentDidMount() {\n    // Count Every Second spent on this opened Mail\n    if (this.props.parentName === \"AllInbox\") {\n      this.interval = setInterval(() => {\n        return this.props.timeCount(this.props.Email.mail.defaultProps);\n      }, 1000);\n    }\n\n    this.collectionInterval = setInterval(this.getScrollAmount, 500);\n    //alert(this.state.alertTemplate);\n    //new code to switch template\n    if (this.state.alertTemplate == 1) {\n      //select overlay template\n      this.setState({ isActive: true });\n      this.setState({ style: { display: \"block\" } });\n    } else if (this.state.alertTemplate == 2) {\n      //selects red button highlight\n      this.setState({ cssClass: \"phishingLink1\" });\n    } else if (this.state.alertTemplate == 3) {\n      //selects gray button highlight\n      this.setState({ cssClass: \"phishingLink2\" });\n    }\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.collectionInterval);\n    clearInterval(this.interval);\n  };\n  setWarning = (e) => {\n    e.preventDefault();\n    this.setState((previous) => ({\n      isActive: !previous.isActive,\n    }));\n  };\n\n  getScrollAmount = () => {\n    let scrollAmount = document.getElementById(\"scrollContainer\").scrollTop;\n    this.props.inEmailScrollAmount(scrollAmount);\n  };\n\n  render() {\n    const handleClick = () => {\n      this.setState({ printMessage: true });\n    };\n\n    const handleClose = () => {\n      this.setState({ printMessage: false });\n    };\n\n    const SpecificEmail = this.props.Email.mail;\n    let email = this.props.Email;\n\n    var styles = {\n      buttonsSidebar: {\n        color: \"#2E2E2E\",\n        margin: \"10px\",\n        backgroundColor: \"#f2f2f2\",\n      },\n    };\n\n    return (\n      <div\n        onMouseEnter={() => {\n          this.props.insideEmailInfo(true, \"InEmailWindow\");\n        }}\n        onMouseLeave={() => {\n          this.props.insideEmailInfo(false, \"InEmailWindow\");\n        }}\n        onMouseOver={() => {\n          this.props.insideEmailInfo(true, \"InEmailWindow\");\n        }}\n        style={{\n          border: \"0.5px solid grey\",\n          height: \"950px\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <div>\n          <div>\n            <Button\n              style={styles.buttonsSidebar}\n              startIcon={<EmailIcon />}\n              variant=\"outlined\"\n              onClick={() => {\n                this.props.onMoveToImportant(email.mail.defaultProps.keyID);\n                this.resetSelectedTab();\n                handleClick();\n              }}\n              onMouseEnter={() => {\n                this.props.insideEmailInfo(true, \"InMoveToImportantButton\");\n              }}\n              onMouseLeave={() => {\n                this.props.insideEmailInfo(false, \"InMoveToImportantButton\");\n              }}\n              onMouseOver={() => {\n                this.props.insideEmailInfo(true, \"InMoveToImportantButton\");\n              }}\n            >\n              Move to Inbox\n              <Snackbar\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                open={this.state.printMessage}\n                autoHideDuration={1500}\n                onClose={handleClose}\n              ></Snackbar>\n            </Button>\n            <Button\n              startIcon={<ErrorIcon />}\n              style={styles.buttonsSidebar}\n              variant=\"outlined\"\n              onClick={() => {\n                this.props.onMoveToSpam(email.mail.defaultProps.keyID);\n                this.resetSelectedTab();\n                handleClick();\n              }}\n              onMouseEnter={() => {\n                this.props.insideEmailInfo(true, \"InMoveToSpamButton\");\n              }}\n              onMouseLeave={() => {\n                this.props.insideEmailInfo(false, \"InMoveToSpamButton\");\n              }}\n              onMouseOver={() => {\n                this.props.insideEmailInfo(true, \"InMoveToSpamButton\");\n              }}\n            >\n              Move to Spam\n              <Snackbar\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                open={this.state.printMessage}\n                autoHideDuration={1500}\n                onClose={handleClose}\n              ></Snackbar>\n            </Button>\n            <Button\n              style={styles.buttonsSidebar}\n              startIcon={<DeleteIcon />}\n              variant=\"outlined\"\n              onClick={() => {\n                this.props.onMoveToBin(email.mail.defaultProps.keyID);\n                this.resetSelectedTab();\n                handleClick();\n              }}\n              onMouseEnter={() => {\n                this.props.insideEmailInfo(true, \"InMoveToBinButton\");\n              }}\n              onMouseLeave={() => {\n                this.props.insideEmailInfo(false, \"InMoveToBinButton\");\n              }}\n              onMouseOver={() => {\n                this.props.insideEmailInfo(true, \"InMoveToBinButton\");\n              }}\n            >\n              Move to Bin\n              <Snackbar\n                anchorOrigin={{\n                  vertical: \"bottom\",\n                  horizontal: \"left\",\n                }}\n                open={this.state.printMessage}\n                autoHideDuration={1000}\n                message=\"Email moved\"\n                onClose={handleClose}\n              ></Snackbar>\n            </Button>\n          </div>\n\n          <EmailTopBar\n            onMoveEmailBackward={this.props.onMoveEmailBackward}\n            onMoveEmailForward={this.props.onMoveEmailForward}\n          ></EmailTopBar>\n          <HeaderInfoEmail\n            Email={email}\n            emailAdress={this.props.emailAdress}\n            insideEmailInfo={this.props.insideEmailInfo}\n          ></HeaderInfoEmail>\n        </div>\n        <hr />\n        <div\n          id=\"scrollContainer\"\n          className={this.state.cssClass}\n          style={{\n            marginLeft: \"30px\",\n            marginTop: \"5px\",\n            overflowY: \"scroll\",\n            width: \"710px\",\n            height: \"650px\",\n            backgroundColor: \"white\",\n          }}\n          onMouseEnter={() => {\n            this.props.insideEmailInfo(true, \"InEmailBody\");\n          }}\n          onMouseLeave={() => {\n            this.props.insideEmailInfo(false, \"InEmailBody\");\n          }}\n          onMouseOver={() => {\n            this.props.insideEmailInfo(true, \"InEmailBody\");\n          }}\n        >\n          <SpecificEmail\n            userName={this.props.userName}\n            emailAdress={this.props.emailAdress}\n            insideEmailInfo={this.props.insideEmailInfo}\n            clickedLink={this.props.clickedLink}\n          ></SpecificEmail>\n          {/* <LoadingOverlay\n            active={this.state.isActive}\n            spinner={this.state.spinner}\n            text=\"This link might be phishing\"\n          >\n            \n          </LoadingOverlay>\n          <center style={this.state.style}>\n            This email might contain phishing link.\n            <br />{\" \"}\n            <button\n              type=\"button\"\n              className=\"MuiButtonBase-root MuiButton-root MuiButton-outlined\"\n              onClick={() => {\n                this.setState({ isActive: false });\n                this.setState({ style: { display: \"none\" } });\n              }}\n            >\n              Proceed to email\n            </button>\n            <br />\n          </center> */}\n          {/* <div\n          className=\"modal fade\"\n          id=\"blockingLinkModal\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalLabel\"\n          aria-hidden=\"true\"\n          style={this.state.style}\n        >\n          <BlockingLinkModal />\n        </div> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EmailWindow;\n"]},"metadata":{},"sourceType":"module"}