{"ast":null,"code":"var _jsxFileName = \"/Users/Hedi/Documents/S/WS20:21/Bachelorarbeit/ryan_steimer/Deployment/Deployment/src/components/accuracyTest.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Canvas from \"./canvas.js\";\n\nclass AccuracyTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const timer = setTimeout(this.startAccuracyTest, 3000);\n    };\n\n    this.startAccuracyTest = () => {\n      this.accuracyInterval = setInterval(this.drawNewCircle, 2500);\n    };\n\n    this.drawNewCircle = () => {\n      switch (this.counter) {\n        case 1:\n          this.setState({\n            intro: false\n          });\n          this.positionXNew = 100;\n          this.positionYNew = 100;\n          this.changeCirclePosition(this.positionXNew, this.positionYNew);\n          this.props.collectAccuracyData(this.counter, this.positionXNew, this.positionYNew);\n          this.counter++;\n          break;\n\n        case 2:\n          this.positionXNew = this.state.screenWidth / 2;\n          this.positionYNew = 100;\n          this.changeCirclePosition(this.positionXNew, this.positionYNew);\n          this.props.collectAccuracyData(this.counter, this.positionXNew, this.positionYNew);\n          this.counter++;\n          break;\n\n        case 3:\n          this.positionXNew = this.state.screenWidth - 100;\n          this.positionYNew = 100;\n          this.changeCirclePosition(this.positionXNew, this.positionYNew);\n          this.props.collectAccuracyData(this.counter, this.positionXNew, this.positionYNew);\n          this.counter++;\n          break;\n\n        case 4:\n          this.positionXNew = 100;\n          this.positionYNew = this.state.screenHeight / 2;\n          this.changeCirclePosition(this.positionXNew, this.positionYNew);\n          this.props.collectAccuracyData(this.counter, this.positionXNew, this.positionYNew);\n          this.counter++;\n          break;\n\n        case 5:\n          this.positionXNew = this.state.screenWidth / 2;\n          this.positionYNew = this.state.screenHeight / 2;\n          this.changeCirclePosition(this.positionXNew, this.positionYNew);\n          this.props.collectAccuracyData(this.counter, this.positionXNew, this.positionYNew);\n          this.counter++;\n          break;\n\n        case 6:\n          this.positionXNew = this.state.screenWidth - 100;\n          this.positionYNew = this.state.screenHeight / 2;\n          this.changeCirclePosition(this.positionXNew, this.positionYNew);\n          this.props.collectAccuracyData(this.counter, this.positionXNew, this.positionYNew);\n          this.counter++;\n          break;\n\n        case 7:\n          this.positionXNew = 100;\n          this.positionYNew = this.state.screenHeight - 100;\n          this.changeCirclePosition(this.positionXNew, this.positionYNew);\n          this.props.collectAccuracyData(this.counter, this.positionXNew, this.positionYNew);\n          this.counter++;\n          break;\n\n        case 8:\n          this.positionXNew = this.state.screenWidth / 2;\n          this.positionYNew = this.state.screenHeight - 100;\n          this.changeCirclePosition(this.positionXNew, this.positionYNew);\n          this.props.collectAccuracyData(this.counter, this.positionXNew, this.positionYNew);\n          this.counter++;\n          break;\n\n        case 9:\n          this.positionXNew = this.state.screenWidth - 100;\n          this.positionYNew = this.state.screenHeight - 100;\n          this.changeCirclePosition(this.positionXNew, this.positionYNew);\n          this.props.collectAccuracyData(this.counter, this.positionXNew, this.positionYNew);\n          clearInterval(this.accuracyInterval);\n          const timer = setTimeout(this.stopAccuracyTest, 2500);\n          break;\n\n        default:\n      }\n    };\n\n    this.changeCirclePosition = (xPos, yPos) => {\n      this.setState({\n        positionX: xPos,\n        positionY: yPos\n      });\n    };\n\n    this.stopAccuracyTest = () => {\n      this.setState({\n        testComplete: true\n      });\n      this.props.stopAccuracyTest();\n    };\n\n    this.state = {\n      testComplete: false,\n      screenWidth: window.innerWidth,\n      screenHeight: window.innerHeight,\n      positionX: window.innerWidth / 2,\n      positionY: window.innerHeight / 2,\n      intro: true\n    };\n    this.counter = 1;\n    this.accuracyInterval = null;\n    this.positionXNew = 0;\n    this.positionYNew = 0;\n  }\n\n  render() {\n    let canvas;\n\n    if (this.state.intro === true) {\n      canvas = /*#__PURE__*/React.createElement(Canvas, {\n        draw: ctx => {\n          ctx.clearRect(0, 0, this.state.screenWidth, this.state.screenHeight);\n          ctx.fillStyle = \"#000000\";\n          ctx.fillRect(0, 0, this.state.screenWidth - 17, this.state.screenHeight - 17);\n          ctx.fillStyle = \"white\";\n          ctx.font = \"30px Arial\";\n          ctx.fillText(\"Please follow the red circle with your eyes\", this.state.screenWidth / 2 - 300, this.state.screenHeight / 2);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }\n      });\n    } else {\n      canvas = /*#__PURE__*/React.createElement(Canvas, {\n        draw: ctx => {\n          ctx.clearRect(0, 0, this.state.screenWidth, this.state.screenHeight);\n          ctx.fillStyle = \"#000000\";\n          ctx.fillRect(0, 0, this.state.screenWidth - 17, this.state.screenHeight - 17);\n          ctx.lineWidth = 5;\n          ctx.strokeStyle = \"#fc0b0b\";\n          ctx.arc(this.state.positionX, this.state.positionY, 20, 0, 2 * Math.PI);\n          ctx.closePath();\n          ctx.stroke();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 7\n      }\n    }, !this.state.testComplete ? canvas : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/SurveyComponent\",\n      activeClassName: \"active\",\n      style: {\n        width: \"380px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      style: {\n        backgroundColor: \"#04B45F\",\n        margin: \"10px\"\n      },\n      onClick: this.props.sendAccuracyData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ExitToAppIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }\n    }), \"Go To Survey\"))));\n  }\n\n}\n\nexport default AccuracyTest;\n/*<Link\r\n  to=\"/SurveyComponent\"\r\n  activeClassName=\"active\"\r\n  style={{ width: \"380px\" }}\r\n></Link>;*/","map":{"version":3,"sources":["/Users/Hedi/Documents/S/WS20:21/Bachelorarbeit/ryan_steimer/Deployment/Deployment/src/components/accuracyTest.js"],"names":["React","Component","Link","Button","ExitToAppIcon","Canvas","AccuracyTest","constructor","props","componentDidMount","timer","setTimeout","startAccuracyTest","accuracyInterval","setInterval","drawNewCircle","counter","setState","intro","positionXNew","positionYNew","changeCirclePosition","collectAccuracyData","state","screenWidth","screenHeight","clearInterval","stopAccuracyTest","xPos","yPos","positionX","positionY","testComplete","window","innerWidth","innerHeight","render","canvas","ctx","clearRect","fillStyle","fillRect","font","fillText","lineWidth","strokeStyle","arc","Math","PI","closePath","stroke","display","justifyContent","width","backgroundColor","margin","sendAccuracyData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Canvas from \"./canvas.js\";\r\n\r\nclass AccuracyTest extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      testComplete: false,\r\n      screenWidth: window.innerWidth,\r\n      screenHeight: window.innerHeight,\r\n      positionX: window.innerWidth / 2,\r\n      positionY: window.innerHeight / 2,\r\n      intro: true,\r\n    };\r\n\r\n    this.counter = 1;\r\n    this.accuracyInterval = null;\r\n    this.positionXNew = 0;\r\n    this.positionYNew = 0;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const timer = setTimeout(this.startAccuracyTest, 3000);\r\n  };\r\n\r\n  startAccuracyTest = () => {\r\n    this.accuracyInterval = setInterval(this.drawNewCircle, 2500);\r\n  };\r\n\r\n  drawNewCircle = () => {\r\n    switch (this.counter) {\r\n      case 1:\r\n        this.setState({ intro: false });\r\n        this.positionXNew = 100;\r\n        this.positionYNew = 100;\r\n        this.changeCirclePosition(this.positionXNew, this.positionYNew);\r\n        this.props.collectAccuracyData(\r\n          this.counter,\r\n          this.positionXNew,\r\n          this.positionYNew\r\n        );\r\n        this.counter++;\r\n        break;\r\n      case 2:\r\n        this.positionXNew = this.state.screenWidth / 2;\r\n        this.positionYNew = 100;\r\n        this.changeCirclePosition(this.positionXNew, this.positionYNew);\r\n        this.props.collectAccuracyData(\r\n          this.counter,\r\n          this.positionXNew,\r\n          this.positionYNew\r\n        );\r\n        this.counter++;\r\n        break;\r\n      case 3:\r\n        this.positionXNew = this.state.screenWidth - 100;\r\n        this.positionYNew = 100;\r\n        this.changeCirclePosition(this.positionXNew, this.positionYNew);\r\n        this.props.collectAccuracyData(\r\n          this.counter,\r\n          this.positionXNew,\r\n          this.positionYNew\r\n        );\r\n        this.counter++;\r\n        break;\r\n      case 4:\r\n        this.positionXNew = 100;\r\n        this.positionYNew = this.state.screenHeight / 2;\r\n        this.changeCirclePosition(this.positionXNew, this.positionYNew);\r\n        this.props.collectAccuracyData(\r\n          this.counter,\r\n          this.positionXNew,\r\n          this.positionYNew\r\n        );\r\n        this.counter++;\r\n        break;\r\n      case 5:\r\n        this.positionXNew = this.state.screenWidth / 2;\r\n        this.positionYNew = this.state.screenHeight / 2;\r\n        this.changeCirclePosition(this.positionXNew, this.positionYNew);\r\n        this.props.collectAccuracyData(\r\n          this.counter,\r\n          this.positionXNew,\r\n          this.positionYNew\r\n        );\r\n        this.counter++;\r\n        break;\r\n      case 6:\r\n        this.positionXNew = this.state.screenWidth - 100;\r\n        this.positionYNew = this.state.screenHeight / 2;\r\n        this.changeCirclePosition(this.positionXNew, this.positionYNew);\r\n        this.props.collectAccuracyData(\r\n          this.counter,\r\n          this.positionXNew,\r\n          this.positionYNew\r\n        );\r\n        this.counter++;\r\n        break;\r\n      case 7:\r\n        this.positionXNew = 100;\r\n        this.positionYNew = this.state.screenHeight - 100;\r\n        this.changeCirclePosition(this.positionXNew, this.positionYNew);\r\n        this.props.collectAccuracyData(\r\n          this.counter,\r\n          this.positionXNew,\r\n          this.positionYNew\r\n        );\r\n        this.counter++;\r\n        break;\r\n      case 8:\r\n        this.positionXNew = this.state.screenWidth / 2;\r\n        this.positionYNew = this.state.screenHeight - 100;\r\n        this.changeCirclePosition(this.positionXNew, this.positionYNew);\r\n        this.props.collectAccuracyData(\r\n          this.counter,\r\n          this.positionXNew,\r\n          this.positionYNew\r\n        );\r\n        this.counter++;\r\n        break;\r\n      case 9:\r\n        this.positionXNew = this.state.screenWidth - 100;\r\n        this.positionYNew = this.state.screenHeight - 100;\r\n        this.changeCirclePosition(this.positionXNew, this.positionYNew);\r\n        this.props.collectAccuracyData(\r\n          this.counter,\r\n          this.positionXNew,\r\n          this.positionYNew\r\n        );\r\n        clearInterval(this.accuracyInterval);\r\n        const timer = setTimeout(this.stopAccuracyTest, 2500);\r\n        break;\r\n\r\n      default:\r\n    }\r\n  };\r\n\r\n  changeCirclePosition = (xPos, yPos) => {\r\n    this.setState({ positionX: xPos, positionY: yPos });\r\n  };\r\n\r\n  stopAccuracyTest = () => {\r\n    this.setState({ testComplete: true });\r\n    this.props.stopAccuracyTest();\r\n  };\r\n\r\n  render() {\r\n    let canvas;\r\n\r\n    if (this.state.intro === true) {\r\n      canvas = (\r\n        <Canvas\r\n          draw={(ctx) => {\r\n            ctx.clearRect(\r\n              0,\r\n              0,\r\n              this.state.screenWidth,\r\n              this.state.screenHeight\r\n            );\r\n            ctx.fillStyle = \"#000000\";\r\n            ctx.fillRect(\r\n              0,\r\n              0,\r\n              this.state.screenWidth - 17,\r\n              this.state.screenHeight - 17\r\n            );\r\n            ctx.fillStyle = \"white\";\r\n            ctx.font = \"30px Arial\";\r\n\r\n            ctx.fillText(\r\n              \"Please follow the red circle with your eyes\",\r\n              this.state.screenWidth / 2 - 300,\r\n              this.state.screenHeight / 2\r\n            );\r\n          }}\r\n        />\r\n      );\r\n    } else {\r\n      canvas = (\r\n        <Canvas\r\n          draw={(ctx) => {\r\n            ctx.clearRect(\r\n              0,\r\n              0,\r\n              this.state.screenWidth,\r\n              this.state.screenHeight\r\n            );\r\n            ctx.fillStyle = \"#000000\";\r\n            ctx.fillRect(\r\n              0,\r\n              0,\r\n              this.state.screenWidth - 17,\r\n              this.state.screenHeight - 17\r\n            );\r\n            ctx.lineWidth = 5;\r\n            ctx.strokeStyle = \"#fc0b0b\";\r\n            ctx.arc(\r\n              this.state.positionX,\r\n              this.state.positionY,\r\n              20,\r\n              0,\r\n              2 * Math.PI\r\n            );\r\n            ctx.closePath();\r\n            ctx.stroke();\r\n          }}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {!this.state.testComplete ? (\r\n          canvas\r\n        ) : (\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Link\r\n              to=\"/SurveyComponent\"\r\n              activeClassName=\"active\"\r\n              style={{ width: \"380px\" }}\r\n            >\r\n              <Button\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#04B45F\", margin: \"10px\" }}\r\n                onClick={this.props.sendAccuracyData}\r\n              >\r\n                <ExitToAppIcon></ExitToAppIcon>Go To Survey\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccuracyTest;\r\n/*<Link\r\n  to=\"/SurveyComponent\"\r\n  activeClassName=\"active\"\r\n  style={{ width: \"380px\" }}\r\n></Link>;*/\r\n"]},"metadata":{},"sourceType":"module"}