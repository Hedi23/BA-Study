{"ast":null,"code":"var _jsxFileName = \"/Users/Hedi/Documents/S/WS20:21/Bachelorarbeit/ryan_steimer/Deployment/Deployment/src/components/allInbox.js\";\nimport React, { Component } from \"react\";\nimport Sidebar from \"./sidebar.js\";\n\nclass AllInbox extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allInbox: []\n    };\n\n    this.componentDidMount = () => {\n      let inbox = [];\n      this.props.Mails.map(email => {\n        if (email.type === \"AllInbox\") {\n          inbox.push(email);\n        }\n      });\n      this.setState({\n        allInbox: inbox\n      });\n    };\n\n    this.componentWillReceiveProps = () => {\n      let inbox = [];\n      this.props.Mails.map(email => {\n        if (email.type === \"AllInbox\") {\n          inbox.push(email);\n        }\n      });\n      this.setState({\n        allInbox: inbox\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      inEmailScrollAmount: this.props.inEmailScrollAmount,\n      Mails: this.state.allInbox,\n      InboxType: \"AllInbox\",\n      onMoveToSpam: this.props.onMoveToSpam,\n      onMoveToBin: this.props.onMoveToBin,\n      onMoveToImportant: this.props.onMoveToImportant,\n      Response: this.props.Response,\n      onNewEmail: this.props.onNewEmail,\n      Recipient: this.props.Recipient,\n      userName: this.props.userName,\n      insideEmailInfo: this.props.insideEmailInfo,\n      outsideEmailInfo: this.props.outsideEmailInfo,\n      inEmailText: this.props.inEmailText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default AllInbox;","map":{"version":3,"sources":["/Users/Hedi/Documents/S/WS20:21/Bachelorarbeit/ryan_steimer/Deployment/Deployment/src/components/allInbox.js"],"names":["React","Component","Sidebar","AllInbox","state","allInbox","componentDidMount","inbox","props","Mails","map","email","type","push","setState","componentWillReceiveProps","render","inEmailScrollAmount","onMoveToSpam","onMoveToBin","onMoveToImportant","Response","onNewEmail","Recipient","userName","insideEmailInfo","outsideEmailInfo","inEmailText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KADuB;;AAAA,SAG/BC,iBAH+B,GAGX,MAAM;AACxB,UAAIC,KAAK,GAAG,EAAZ;AACA,WAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBC,KAAD,IAAW;AAC9B,YAAIA,KAAK,CAACC,IAAN,KAAe,UAAnB,EAA+B;AAC7BL,UAAAA,KAAK,CAACM,IAAN,CAAWF,KAAX;AACD;AACF,OAJD;AAMA,WAAKG,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEE;AAAZ,OAAd;AACD,KAZ8B;;AAAA,SAc/BQ,yBAd+B,GAcH,MAAM;AAChC,UAAIR,KAAK,GAAG,EAAZ;AACA,WAAKC,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAsBC,KAAD,IAAW;AAC9B,YAAIA,KAAK,CAACC,IAAN,KAAe,UAAnB,EAA+B;AAC7BL,UAAAA,KAAK,CAACM,IAAN,CAAWF,KAAX;AACD;AACF,OAJD;AAMA,WAAKG,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEE;AAAZ,OAAd;AACD,KAvB8B;AAAA;;AAyB/BS,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AACE,MAAA,mBAAmB,EAAE,KAAKR,KAAL,CAAWS,mBADlC;AAEE,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,QAFpB;AAGE,MAAA,SAAS,EAAC,UAHZ;AAIE,MAAA,YAAY,EAAE,KAAKG,KAAL,CAAWU,YAJ3B;AAKE,MAAA,WAAW,EAAE,KAAKV,KAAL,CAAWW,WAL1B;AAME,MAAA,iBAAiB,EAAE,KAAKX,KAAL,CAAWY,iBANhC;AAOE,MAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWa,QAPvB;AAQE,MAAA,UAAU,EAAE,KAAKb,KAAL,CAAWc,UARzB;AASE,MAAA,SAAS,EAAE,KAAKd,KAAL,CAAWe,SATxB;AAUE,MAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWgB,QAVvB;AAWE,MAAA,eAAe,EAAE,KAAKhB,KAAL,CAAWiB,eAX9B;AAYE,MAAA,gBAAgB,EAAE,KAAKjB,KAAL,CAAWkB,gBAZ/B;AAaE,MAAA,WAAW,EAAE,KAAKlB,KAAL,CAAWmB,WAb1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAmBD;;AA7C8B;;AAgDjC,eAAexB,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Sidebar from \"./sidebar.js\";\n\nclass AllInbox extends Component {\n  state = { allInbox: [] };\n\n  componentDidMount = () => {\n    let inbox = [];\n    this.props.Mails.map((email) => {\n      if (email.type === \"AllInbox\") {\n        inbox.push(email);\n      }\n    });\n\n    this.setState({ allInbox: inbox });\n  };\n\n  componentWillReceiveProps = () => {\n    let inbox = [];\n    this.props.Mails.map((email) => {\n      if (email.type === \"AllInbox\") {\n        inbox.push(email);\n      }\n    });\n\n    this.setState({ allInbox: inbox });\n  };\n\n  render() {\n    return (\n      <div>\n        <Sidebar\n          inEmailScrollAmount={this.props.inEmailScrollAmount}\n          Mails={this.state.allInbox}\n          InboxType=\"AllInbox\"\n          onMoveToSpam={this.props.onMoveToSpam}\n          onMoveToBin={this.props.onMoveToBin}\n          onMoveToImportant={this.props.onMoveToImportant}\n          Response={this.props.Response}\n          onNewEmail={this.props.onNewEmail}\n          Recipient={this.props.Recipient}\n          userName={this.props.userName}\n          insideEmailInfo={this.props.insideEmailInfo}\n          outsideEmailInfo={this.props.outsideEmailInfo}\n          inEmailText={this.props.inEmailText}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AllInbox;\n"]},"metadata":{},"sourceType":"module"}