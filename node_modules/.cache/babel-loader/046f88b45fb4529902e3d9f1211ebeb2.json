{"ast":null,"code":"var _jsxFileName = \"/Users/Hedi/Documents/S/WS20:21/Study/src/components/sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport EmailWindow from \"./emailWindow\";\nimport { grey } from \"@material-ui/core/colors\";\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `vertical-tabpanel-${index}`,\n    \"aria-labelledby\": `vertical-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, children)));\n}\n\n_c = TabPanel;\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 0,\n    backgroundColor: \"white\",\n    borderTop: \"1px solid grey\",\n    borderBottom: \"1px solid grey\",\n    display: \"inline-flex\",\n    width: 980,\n    height: 1000,\n    marginTop: \"20px\"\n  },\n  tabs: {}\n}));\nexport default function VerticalTabs(props) {\n  _s();\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(undefined);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue); //added\n\n    passNewValue(newValue); // alert(newValue);\n  }; //hand over current Email into sidebar props for Ryan x)\n\n\n  const passNewValue = newValue => {\n    if (newValue === undefined || props.Mails[newValue] === undefined) {\n      props.onNewEmail(0);\n    } else {\n      let selectedEmailID = props.Mails[newValue].mail.defaultProps.keyID;\n      props.onNewEmail(selectedEmailID);\n    }\n  };\n\n  const resetSelectedTab = () => {\n    setValue(value);\n    passNewValue(value + 1);\n  };\n\n  const forwardSelectedTab = () => {\n    let newTab = value + 1;\n\n    if (newTab > props.Mails.length - 1) {\n      newTab = 0;\n    }\n\n    setValue(newTab);\n    passNewValue(newTab);\n  };\n\n  const backSelectedTab = () => {\n    let newTab = value - 1;\n\n    if (newTab < 0) {\n      newTab = props.Mails.length - 1;\n    }\n\n    setValue(newTab);\n    passNewValue(newTab);\n  };\n\n  const styles = {\n    largeParUnseen: {\n      fontWeight: \"bolder\",\n      textAlign: \"left\",\n      fontSize: \"12px\",\n      margin: \"0\",\n      color: \"black\"\n    },\n    largeParSeen: {\n      fontWeight: \"300\",\n      textAlign: \"left\",\n      fontSize: \"12px\",\n      margin: \"0\",\n      color: \"black\"\n    },\n    smallParUnseen: {\n      textAlign: \"left\",\n      margin: \"0\",\n      fontSize: \"8px\",\n      color: \"black\"\n    },\n    smallParSeen: {\n      textAlign: \"left\",\n      margin: \"0\",\n      fontSize: \"8px\",\n      color: \"grey\"\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    orientation: \"vertical\",\n    variant: \"scrollable\",\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"Vertical tabs example\",\n    className: classes.tabs,\n    style: {\n      borderRight: \"1px solid grey\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, props.Mails.map(email => {\n    let unseen = email.mail.defaultProps.unseen;\n    return /*#__PURE__*/React.createElement(Tab, Object.assign({\n      onMouseEnter: () => {\n        props.outsideEmailInfo(true, `InTab ${email.mail.defaultProps.keyID}`);\n      },\n      onMouseLeave: () => {\n        props.outsideEmailInfo(false, `InTab ${email.mail.defaultProps.keyID}`);\n      },\n      style: {\n        fontSize: \"10px\",\n        textTransform: \"none\",\n        borderBottom: \"1px solid grey\",\n        margin: \"0\",\n        backgroundColor: \"white\",\n        width: \"180px\"\n      },\n      label: /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"175px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      }, email.mail.defaultProps.senderName ? /*#__PURE__*/React.createElement(\"p\", {\n        style: unseen ? styles.largeParUnseen : styles.largeParSeen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 23\n        }\n      }, email.mail.defaultProps.senderName) : /*#__PURE__*/React.createElement(\"p\", {\n        style: unseen ? styles.largeParUnseen : styles.largeParSeen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 23\n        }\n      }, email.mail.defaultProps.sender), /*#__PURE__*/React.createElement(\"p\", {\n        style: unseen ? styles.largeParUnseen : styles.largeParSeen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, email.mail.defaultProps.subject), /*#__PURE__*/React.createElement(\"p\", {\n        style: unseen ? styles.smallParUnseen : styles.smallParSeen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }\n      }, email.mail.defaultProps.date))\n    }, a11yProps(props.Mails.indexOf(email)), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }));\n  })), props.Mails.length === 0 && /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      margin: \"0 auto\",\n      marginTop: \"100px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, \"This inbox is empty\"), props.Mails.map(email => {\n    return /*#__PURE__*/React.createElement(TabPanel, {\n      value: value,\n      index: props.Mails.indexOf(email),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        overflowWrap: \"break-word\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(EmailWindow, {\n      inEmailScrollAmount: props.inEmailScrollAmount,\n      emailAdress: props.Recipient,\n      userName: props.userName,\n      resetSelectedTab: resetSelectedTab,\n      onNewEmail: props.onNewEmail,\n      Email: email,\n      onMoveToSpam: props.onMoveToSpam,\n      onMoveToBin: props.onMoveToBin,\n      onMoveToImportant: props.onMoveToImportant,\n      onMoveEmailForward: forwardSelectedTab,\n      onMoveEmailBackward: backSelectedTab,\n      insideEmailInfo: props.insideEmailInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    })));\n  })));\n}\n\n_s(VerticalTabs, \"a64CsFo0wOkdppsXDmd+5AQdKEQ=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = VerticalTabs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"VerticalTabs\");","map":{"version":3,"sources":["/Users/Hedi/Documents/S/WS20:21/Study/src/components/sidebar.js"],"names":["React","PropTypes","makeStyles","Tabs","Tab","Typography","Box","EmailWindow","grey","TabPanel","props","children","value","index","other","propTypes","node","any","isRequired","a11yProps","id","useStyles","theme","root","flexGrow","backgroundColor","borderTop","borderBottom","display","width","height","marginTop","tabs","VerticalTabs","classes","setValue","useState","undefined","handleChange","event","newValue","passNewValue","Mails","onNewEmail","selectedEmailID","mail","defaultProps","keyID","resetSelectedTab","forwardSelectedTab","newTab","length","backSelectedTab","styles","largeParUnseen","fontWeight","textAlign","fontSize","margin","color","largeParSeen","smallParUnseen","smallParSeen","borderRight","map","email","unseen","outsideEmailInfo","textTransform","senderName","sender","subject","date","indexOf","overflowWrap","inEmailScrollAmount","Recipient","userName","onMoveToSpam","onMoveToBin","onMoveToImportant","insideEmailInfo"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport EmailWindow from \"./emailWindow\";\nimport { grey } from \"@material-ui/core/colors\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 0,\n    backgroundColor: \"white\",\n    borderTop: \"1px solid grey\",\n    borderBottom: \"1px solid grey\",\n    display: \"inline-flex\",\n    width: 980,\n    height: 1000,\n    marginTop: \"20px\",\n  },\n  tabs: {},\n}));\n\nexport default function VerticalTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(undefined);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n\n    //added\n    passNewValue(newValue);\n    // alert(newValue);\n  };\n\n  //hand over current Email into sidebar props for Ryan x)\n  const passNewValue = (newValue) => {\n    if (newValue === undefined || props.Mails[newValue] === undefined) {\n      props.onNewEmail(0);\n    } else {\n      let selectedEmailID = props.Mails[newValue].mail.defaultProps.keyID;\n      props.onNewEmail(selectedEmailID);\n    }\n  };\n\n  const resetSelectedTab = () => {\n    setValue(value);\n    passNewValue(value + 1);\n  };\n\n  const forwardSelectedTab = () => {\n    let newTab = value + 1;\n    if (newTab > props.Mails.length - 1) {\n      newTab = 0;\n    }\n    setValue(newTab);\n    passNewValue(newTab);\n  };\n\n  const backSelectedTab = () => {\n    let newTab = value - 1;\n\n    if (newTab < 0) {\n      newTab = props.Mails.length - 1;\n    }\n    setValue(newTab);\n    passNewValue(newTab);\n  };\n\n  const styles = {\n    largeParUnseen: {\n      fontWeight: \"bolder\",\n      textAlign: \"left\",\n      fontSize: \"12px\",\n      margin: \"0\",\n      color: \"black\",\n    },\n    largeParSeen: {\n      fontWeight: \"300\",\n      textAlign: \"left\",\n      fontSize: \"12px\",\n      margin: \"0\",\n      color: \"black\",\n    },\n\n    smallParUnseen: {\n      textAlign: \"left\",\n      margin: \"0\",\n      fontSize: \"8px\",\n      color: \"black\",\n    },\n\n    smallParSeen: {\n      textAlign: \"left\",\n      margin: \"0\",\n      fontSize: \"8px\",\n      color: \"grey\",\n    },\n  };\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <Tabs\n          orientation=\"vertical\"\n          variant=\"scrollable\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"Vertical tabs example\"\n          className={classes.tabs}\n          style={{\n            borderRight: \"1px solid grey\",\n          }}\n        >\n          {props.Mails.map((email) => {\n            let unseen = email.mail.defaultProps.unseen;\n            return (\n              <Tab\n                onMouseEnter={() => {\n                  props.outsideEmailInfo(\n                    true,\n                    `InTab ${email.mail.defaultProps.keyID}`\n                  );\n                }}\n                onMouseLeave={() => {\n                  props.outsideEmailInfo(\n                    false,\n                    `InTab ${email.mail.defaultProps.keyID}`\n                  );\n                }}\n                style={{\n                  fontSize: \"10px\",\n                  textTransform: \"none\",\n                  borderBottom: \"1px solid grey\",\n                  margin: \"0\",\n                  backgroundColor: \"white\",\n                  width: \"180px\",\n                }}\n                label={\n                  <div style={{ width: \"175px\" }}>\n                    {email.mail.defaultProps.senderName ? (\n                      <p\n                        style={\n                          unseen ? styles.largeParUnseen : styles.largeParSeen\n                        }\n                      >\n                        {email.mail.defaultProps.senderName}\n                      </p>\n                    ) : (\n                      <p\n                        style={\n                          unseen ? styles.largeParUnseen : styles.largeParSeen\n                        }\n                      >\n                        {email.mail.defaultProps.sender}\n                      </p>\n                    )}\n                    <p\n                      style={\n                        unseen ? styles.largeParUnseen : styles.largeParSeen\n                      }\n                    >\n                      {email.mail.defaultProps.subject}\n                    </p>\n                    <p\n                      style={\n                        unseen ? styles.smallParUnseen : styles.smallParSeen\n                      }\n                    >\n                      {email.mail.defaultProps.date}\n                    </p>\n                  </div>\n                }\n                {...a11yProps(props.Mails.indexOf(email))}\n              />\n            );\n          })}\n        </Tabs>\n\n        {props.Mails.length === 0 && (\n          <h1 style={{ margin: \"0 auto\", marginTop: \"100px\" }}>\n            This inbox is empty\n          </h1>\n        )}\n\n        {props.Mails.map((email) => {\n          return (\n            <TabPanel value={value} index={props.Mails.indexOf(email)}>\n              <div\n                style={{\n                  overflowWrap: \"break-word\",\n                }}\n              >\n                <EmailWindow\n                  inEmailScrollAmount={props.inEmailScrollAmount}\n                  emailAdress={props.Recipient}\n                  userName={props.userName}\n                  resetSelectedTab={resetSelectedTab}\n                  onNewEmail={props.onNewEmail}\n                  Email={email}\n                  onMoveToSpam={props.onMoveToSpam}\n                  onMoveToBin={props.onMoveToBin}\n                  onMoveToImportant={props.onMoveToImportant}\n                  onMoveEmailForward={forwardSelectedTab}\n                  onMoveEmailBackward={backSelectedTab}\n                  insideEmailInfo={props.insideEmailInfo}\n                ></EmailWindow>\n              </div>\n            </TabPanel>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}