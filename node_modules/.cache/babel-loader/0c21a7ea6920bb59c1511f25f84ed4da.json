{"ast":null,"code":"var _jsxFileName = \"/Users/Hedi/Documents/S/WS20:21/Bachelorarbeit/ryan_steimer/Deployment/Deployment/src/components/Tracker.js\";\nimport React, { Component } from \"react\";\nimport EmailClient from \"./emailClient\";\n\nclass Tracker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserID = () => {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(\"/connect\", requestOptions).then(response => response.json()).then(data => this.setState({\n        userId: data.userID\n      })).then(() => this.props.userID(this.state.userId));\n    };\n\n    this.getNickname = () => {\n      //set nickname from props\n      let nickname = this.props.userInfo.userName;\n      this.setState({\n        userNickname: nickname\n      });\n    };\n\n    this.startTracking = () => {\n      this.collectionInterval = setInterval(this.collectStates, 250);\n      this.sendingIntervall = setInterval(this.sendData, 5000);\n    };\n\n    this.sendData = () => {\n      //Send to Server\n      const data = this.stateCollector;\n      const response = fetch(\"/data\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(this.resetCollector);\n    };\n\n    this.collectStates = () => {\n      this.setAllInfo();\n      this.fillCollector();\n      this.resetStates();\n    };\n\n    this.setAllInfo = () => {\n      this.settingsChecker();\n      this.setTimestamp();\n    };\n\n    this.setTimestamp = () => {\n      let currentTime = new Date();\n      let newDate = currentTime.getTime();\n      this.setState({\n        timeStamp: newDate\n      });\n    };\n\n    this.fillCollector = () => {\n      this.stateCollector.push(this.state);\n    };\n\n    this.resetCollector = () => {\n      this.stateCollector = [];\n    };\n\n    this.resetStates = () => {\n      this.setState({\n        click: false,\n        clickPosXTransform: 0,\n        clickPosYTransform: 0,\n        clickPosX: 0,\n        clickPosY: 0\n      });\n    };\n\n    this.settingsChecker = () => {\n      let width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      let height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      let marginTop = window.screenTop;\n      let marginLeft = window.screenLeft;\n      let yScroll = Math.round(window.scrollY);\n      this.setState({\n        browserWidth: width,\n        browserHeight: height,\n        marginToScreenLeft: marginLeft,\n        marginToScreenTop: marginTop,\n        pageScrollY: yScroll\n      });\n      this.setTransformedMousePos(this.state.mousePosXPlain, this.state.mousePosYPlain);\n      this.setinEmailPositionY();\n    };\n\n    this.setinEmailPositionY = () => {\n      let inEmailPositionY = this.state.mousePosYPlain + this.state.inEmailScrollAmount;\n      this.setState({\n        inEmailPositionY: inEmailPositionY\n      });\n    };\n\n    this.SetInEmailScrollAmount = scrollAmount => {\n      let roundScrollAmount = Math.round(scrollAmount);\n      this.setState({\n        inEmailScrollAmount: roundScrollAmount\n      });\n    };\n\n    this.setTransformedMousePos = (x, y) => {\n      let clientWidth = 980;\n\n      if (x > this.state.browserWidth / 2 + clientWidth / 2) {\n        var xTran = (x - (this.state.browserWidth / 2 + clientWidth / 2)) * -1;\n        var yTran = y + this.state.pageScrollY;\n      } else {\n        var xTran = (this.state.browserWidth / 2 - clientWidth / 2 - x) * -1;\n        var yTran = y + this.state.pageScrollY;\n      }\n\n      this.setState({\n        mousePosXTransform: xTran,\n        mousePosYTransform: yTran\n      });\n    };\n\n    this.handleNewCurrentEmail = emailNr => {\n      let copy = this.state;\n      copy.currentEmail = emailNr;\n      this.setState(copy);\n    };\n\n    this.handleNewCurrentInbox = inboxType => {\n      let copy = this.state;\n      copy.currentInbox = inboxType;\n      copy.currentEmail = 0;\n      this.setState(copy);\n    };\n\n    this.handleInboxResult = finalInboxLocal => {\n      this.resultInbox.resultInbox = finalInboxLocal;\n      this.resultInbox.resultInbox.forEach(element => {\n        element.keyID = element.mail.defaultProps.keyID;\n        element.unseen = element.mail.defaultProps.unseen;\n      });\n      this.resultInbox.userID = this.state.userId;\n      this.sendFinalInbox();\n      clearInterval(this.collectionInterval);\n      clearInterval(this.sendingIntervall);\n    };\n\n    this.sendFinalInbox = () => {\n      //Send to Server\n      const data = this.resultInbox;\n      const response = fetch(\"/resultInbox\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(console.log(\"sent result Inbox\"));\n    };\n\n    this.startAccuracyTest = () => {\n      let copy = this.state;\n      copy.submitted = true;\n      this.setState(copy);\n    };\n\n    this.collectAccuracyData = (circlePos, width, height) => {\n      if (this.collectingAccuracy === false) {\n        this.accuracyIntervall = setInterval(this.fillAccuracyCollector, 100, circlePos, width, height);\n        this.collectingAccuracy = true;\n      } else {\n        clearInterval(this.accuracyIntervall);\n        this.collectingAccuracy = false;\n        this.collectAccuracyData(circlePos, width, height);\n      }\n    };\n\n    this.handleInsideEmailInfo = (InOrOutput, whichPart) => {\n      if (InOrOutput === true) {\n        let copy = this.state;\n\n        if (whichPart.includes(\"ClickedLink\")) {\n          copy.insideEmailInfo.push(whichPart);\n          const timerForClickedLink = setTimeout(() => {\n            this.deletefromInsideEmailInfo(whichPart);\n          }, 1000);\n          this.setState(copy);\n          this.sendData();\n          return;\n        }\n\n        if (!copy.insideEmailInfo.includes(whichPart)) {\n          copy.insideEmailInfo.push(whichPart);\n        } else {}\n\n        this.setState(copy);\n      } else {\n        this.deletefromInsideEmailInfo(whichPart);\n      }\n    };\n\n    this.handleOutsideEmailInfo = (InOrOutput, whichPart) => {\n      if (InOrOutput === true) {\n        let copy = this.state;\n        copy.outsideEmailInfo.push(whichPart);\n        this.setState(copy);\n      } else {\n        this.deletefromOutsideEmailInfo(whichPart);\n      }\n    };\n\n    this.deletefromInsideEmailInfo = whichToDelete => {\n      let copy = this.state;\n      const index = copy.insideEmailInfo.indexOf(whichToDelete);\n\n      if (index > -1) {\n        copy.insideEmailInfo.splice(index, 1);\n      }\n\n      this.setState(copy);\n    };\n\n    this.deletefromOutsideEmailInfo = whichToDelete => {\n      let copy = this.state;\n      const index = copy.outsideEmailInfo.indexOf(whichToDelete);\n\n      if (index > -1) {\n        copy.outsideEmailInfo.splice(index, 1);\n      }\n\n      this.setState(copy);\n    };\n\n    this.handleClickedInboxButton = (whichButton, insideWhichButton) => {\n      let copy = this.state;\n      copy.insideEmailInfo.push(whichButton);\n      this.setState(copy);\n      const timer2 = setTimeout(() => {\n        this.deletefromInsideEmailInfo(whichButton);\n      }, 1050);\n    };\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseClick = this.handleMouseClick.bind(this);\n    this.state = {\n      currentEmail: 0,\n      //event dependant\n      currentInbox: \"AllInbox\",\n      insideEmailInfo: [],\n      outsideEmailInfo: [],\n      //event dependant\n      mousePosXPlain: 0,\n      mousePosYPlain: 0,\n      mousePosXTransform: 0,\n      mousePosYTransform: 0,\n      click: false,\n      clickPosXTransform: 0,\n      clickPosYTransform: 0,\n      clickPosX: 0,\n      clickPosY: 0,\n      timeStamp: 0,\n      userId: 0,\n      userNickname: \"\",\n      pageScrollY: 0,\n      browserWidth: 0,\n      browserHeight: 0,\n      marginToScreenTop: 0,\n      marginToScreenLeft: 0,\n      inEmailScrollAmount: 0,\n      inEmailPositionY: 0,\n      submitted: false\n    };\n    this.resultInbox = {\n      resultInbox: [],\n      userID: 0\n    };\n    this.stateCollector = [];\n    this.collectionInterval = undefined;\n    this.sendingInterval = undefined;\n    this.accuracyCollector = [];\n    this.accuracyIntervall = undefined;\n    this.collectingAccuracy = false;\n  }\n\n  componentDidMount() {\n    this.getUserID();\n    this.getNickname();\n    this.props.userID(this.state.userId);\n  }\n\n  handleMouseMove(event) {\n    let x = event.clientX;\n    let y = event.clientY;\n    this.setState({\n      mousePosXPlain: x,\n      mousePosYPlain: y\n    });\n  }\n\n  handleMouseClick(event) {\n    let copy = this.state;\n    this.handleMouseMove(event);\n    this.setTransformedMousePos(this.state.mousePosXPlain, this.state.mousePosYPlain);\n    copy.click = true;\n    copy.clickPosX = this.state.mousePosXPlain;\n    copy.clickPosY = this.state.mousePosYPlain;\n    this.setState(copy);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onMouseMove: this.handleMouseMove,\n      onClick: this.handleMouseClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(EmailClient, {\n      clickedButton: this.handleClickedInboxButton,\n      inEmailScrollAmount: this.SetInEmailScrollAmount,\n      UserInfo: this.props.userInfo,\n      onNewEmail: this.handleNewCurrentEmail,\n      onNewInbox: this.handleNewCurrentInbox,\n      setInboxResult: this.handleInboxResult,\n      insideEmailInfo: this.handleInsideEmailInfo,\n      outsideEmailInfo: this.handleOutsideEmailInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Tracker;","map":{"version":3,"sources":["/Users/Hedi/Documents/S/WS20:21/Bachelorarbeit/ryan_steimer/Deployment/Deployment/src/components/Tracker.js"],"names":["React","Component","EmailClient","Tracker","constructor","props","getUserID","requestOptions","method","headers","fetch","then","response","json","data","setState","userId","userID","state","getNickname","nickname","userInfo","userName","userNickname","startTracking","collectionInterval","setInterval","collectStates","sendingIntervall","sendData","stateCollector","Accept","body","JSON","stringify","resetCollector","setAllInfo","fillCollector","resetStates","settingsChecker","setTimestamp","currentTime","Date","newDate","getTime","timeStamp","push","click","clickPosXTransform","clickPosYTransform","clickPosX","clickPosY","width","window","innerWidth","document","documentElement","clientWidth","height","innerHeight","clientHeight","marginTop","screenTop","marginLeft","screenLeft","yScroll","Math","round","scrollY","browserWidth","browserHeight","marginToScreenLeft","marginToScreenTop","pageScrollY","setTransformedMousePos","mousePosXPlain","mousePosYPlain","setinEmailPositionY","inEmailPositionY","inEmailScrollAmount","SetInEmailScrollAmount","scrollAmount","roundScrollAmount","x","y","xTran","yTran","mousePosXTransform","mousePosYTransform","handleNewCurrentEmail","emailNr","copy","currentEmail","handleNewCurrentInbox","inboxType","currentInbox","handleInboxResult","finalInboxLocal","resultInbox","forEach","element","keyID","mail","defaultProps","unseen","sendFinalInbox","clearInterval","console","log","startAccuracyTest","submitted","collectAccuracyData","circlePos","collectingAccuracy","accuracyIntervall","fillAccuracyCollector","handleInsideEmailInfo","InOrOutput","whichPart","includes","insideEmailInfo","timerForClickedLink","setTimeout","deletefromInsideEmailInfo","handleOutsideEmailInfo","outsideEmailInfo","deletefromOutsideEmailInfo","whichToDelete","index","indexOf","splice","handleClickedInboxButton","whichButton","insideWhichButton","timer2","handleMouseMove","bind","handleMouseClick","undefined","sendingInterval","accuracyCollector","componentDidMount","event","clientX","clientY","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport EmailClient from \"./emailClient\";\r\n\r\nclass Tracker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleMouseClick = this.handleMouseClick.bind(this);\r\n    this.state = {\r\n      currentEmail: 0, //event dependant\r\n      currentInbox: \"AllInbox\",\r\n      insideEmailInfo: [],\r\n      outsideEmailInfo: [], //event dependant\r\n      mousePosXPlain: 0,\r\n      mousePosYPlain: 0,\r\n      mousePosXTransform: 0,\r\n      mousePosYTransform: 0,\r\n      click: false,\r\n      clickPosXTransform: 0,\r\n      clickPosYTransform: 0,\r\n      clickPosX: 0,\r\n      clickPosY: 0,\r\n      timeStamp: 0,\r\n      userId: 0,\r\n      userNickname: \"\",\r\n      pageScrollY: 0,\r\n      browserWidth: 0,\r\n      browserHeight: 0,\r\n      marginToScreenTop: 0,\r\n      marginToScreenLeft: 0,\r\n      inEmailScrollAmount: 0,\r\n      inEmailPositionY: 0,\r\n\r\n      submitted: false,\r\n    };\r\n\r\n    this.resultInbox = { resultInbox: [], userID: 0 };\r\n    this.stateCollector = [];\r\n    this.collectionInterval = undefined;\r\n    this.sendingInterval = undefined;\r\n    this.accuracyCollector = [];\r\n    this.accuracyIntervall = undefined;\r\n    this.collectingAccuracy = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserID();\r\n    this.getNickname();\r\n    this.props.userID(this.state.userId);\r\n  }\r\n\r\n  getUserID = () => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    fetch(\"/connect\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ userId: data.userID }))\r\n      .then(() => this.props.userID(this.state.userId));\r\n  };\r\n\r\n  getNickname = () => {\r\n    //set nickname from props\r\n    let nickname = this.props.userInfo.userName;\r\n    this.setState({ userNickname: nickname });\r\n  };\r\n\r\n  startTracking = () => {\r\n    this.collectionInterval = setInterval(this.collectStates, 250);\r\n    this.sendingIntervall = setInterval(this.sendData, 5000);\r\n  };\r\n\r\n  sendData = () => {\r\n    //Send to Server\r\n    const data = this.stateCollector;\r\n    const response = fetch(\"/data\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then(this.resetCollector);\r\n  };\r\n\r\n  collectStates = () => {\r\n    this.setAllInfo();\r\n    this.fillCollector();\r\n    this.resetStates();\r\n  };\r\n\r\n  setAllInfo = () => {\r\n    this.settingsChecker();\r\n    this.setTimestamp();\r\n  };\r\n\r\n  setTimestamp = () => {\r\n    let currentTime = new Date();\r\n    let newDate = currentTime.getTime();\r\n    this.setState({ timeStamp: newDate });\r\n  };\r\n\r\n  fillCollector = () => {\r\n    this.stateCollector.push(this.state);\r\n  };\r\n\r\n  resetCollector = () => {\r\n    this.stateCollector = [];\r\n  };\r\n\r\n  resetStates = () => {\r\n    this.setState({\r\n      click: false,\r\n      clickPosXTransform: 0,\r\n      clickPosYTransform: 0,\r\n      clickPosX: 0,\r\n      clickPosY: 0,\r\n    });\r\n  };\r\n\r\n  handleMouseMove(event) {\r\n    let x = event.clientX;\r\n    let y = event.clientY;\r\n    this.setState({ mousePosXPlain: x, mousePosYPlain: y });\r\n  }\r\n\r\n  settingsChecker = () => {\r\n    let width =\r\n      window.innerWidth ||\r\n      document.documentElement.clientWidth ||\r\n      document.body.clientWidth;\r\n\r\n    let height =\r\n      window.innerHeight ||\r\n      document.documentElement.clientHeight ||\r\n      document.body.clientHeight;\r\n\r\n    let marginTop = window.screenTop;\r\n    let marginLeft = window.screenLeft;\r\n\r\n    let yScroll = Math.round(window.scrollY);\r\n\r\n    this.setState({\r\n      browserWidth: width,\r\n      browserHeight: height,\r\n      marginToScreenLeft: marginLeft,\r\n      marginToScreenTop: marginTop,\r\n      pageScrollY: yScroll,\r\n    });\r\n\r\n    this.setTransformedMousePos(\r\n      this.state.mousePosXPlain,\r\n      this.state.mousePosYPlain\r\n    );\r\n\r\n    this.setinEmailPositionY();\r\n  };\r\n\r\n  setinEmailPositionY = () => {\r\n    let inEmailPositionY =\r\n      this.state.mousePosYPlain + this.state.inEmailScrollAmount;\r\n    this.setState({ inEmailPositionY: inEmailPositionY });\r\n  };\r\n\r\n  SetInEmailScrollAmount = (scrollAmount) => {\r\n    let roundScrollAmount = Math.round(scrollAmount);\r\n    this.setState({ inEmailScrollAmount: roundScrollAmount });\r\n  };\r\n\r\n  setTransformedMousePos = (x, y) => {\r\n    let clientWidth = 980;\r\n    if (x > this.state.browserWidth / 2 + clientWidth / 2) {\r\n      var xTran = (x - (this.state.browserWidth / 2 + clientWidth / 2)) * -1;\r\n      var yTran = y + this.state.pageScrollY;\r\n    } else {\r\n      var xTran = (this.state.browserWidth / 2 - clientWidth / 2 - x) * -1;\r\n      var yTran = y + this.state.pageScrollY;\r\n    }\r\n    this.setState({ mousePosXTransform: xTran, mousePosYTransform: yTran });\r\n  };\r\n\r\n  handleMouseClick(event) {\r\n    let copy = this.state;\r\n    this.handleMouseMove(event);\r\n    this.setTransformedMousePos(\r\n      this.state.mousePosXPlain,\r\n      this.state.mousePosYPlain\r\n    );\r\n    copy.click = true;\r\n    copy.clickPosX = this.state.mousePosXPlain;\r\n    copy.clickPosY = this.state.mousePosYPlain;\r\n    this.setState(copy);\r\n  }\r\n\r\n  handleNewCurrentEmail = (emailNr) => {\r\n    let copy = this.state;\r\n    copy.currentEmail = emailNr;\r\n    this.setState(copy);\r\n  };\r\n\r\n  handleNewCurrentInbox = (inboxType) => {\r\n    let copy = this.state;\r\n    copy.currentInbox = inboxType;\r\n    copy.currentEmail = 0;\r\n    this.setState(copy);\r\n  };\r\n\r\n  handleInboxResult = (finalInboxLocal) => {\r\n    this.resultInbox.resultInbox = finalInboxLocal;\r\n    this.resultInbox.resultInbox.forEach((element) => {\r\n      element.keyID = element.mail.defaultProps.keyID;\r\n      element.unseen = element.mail.defaultProps.unseen;\r\n    });\r\n    this.resultInbox.userID = this.state.userId;\r\n    this.sendFinalInbox();\r\n    clearInterval(this.collectionInterval);\r\n    clearInterval(this.sendingIntervall);\r\n  };\r\n\r\n  sendFinalInbox = () => {\r\n    //Send to Server\r\n\r\n    const data = this.resultInbox;\r\n    const response = fetch(\"/resultInbox\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then(console.log(\"sent result Inbox\"));\r\n  };\r\n\r\n  startAccuracyTest = () => {\r\n    let copy = this.state;\r\n    copy.submitted = true;\r\n    this.setState(copy);\r\n  };\r\n\r\n  collectAccuracyData = (circlePos, width, height) => {\r\n    if (this.collectingAccuracy === false) {\r\n      this.accuracyIntervall = setInterval(\r\n        this.fillAccuracyCollector,\r\n        100,\r\n        circlePos,\r\n        width,\r\n        height\r\n      );\r\n      this.collectingAccuracy = true;\r\n    } else {\r\n      clearInterval(this.accuracyIntervall);\r\n      this.collectingAccuracy = false;\r\n      this.collectAccuracyData(circlePos, width, height);\r\n    }\r\n  };\r\n\r\n  handleInsideEmailInfo = (InOrOutput, whichPart) => {\r\n    if (InOrOutput === true) {\r\n      let copy = this.state;\r\n      if (whichPart.includes(\"ClickedLink\")) {\r\n        copy.insideEmailInfo.push(whichPart);\r\n        const timerForClickedLink = setTimeout(() => {\r\n          this.deletefromInsideEmailInfo(whichPart);\r\n        }, 1000);\r\n        this.setState(copy);\r\n        this.sendData();\r\n        return;\r\n      }\r\n      if (!copy.insideEmailInfo.includes(whichPart)) {\r\n        copy.insideEmailInfo.push(whichPart);\r\n      } else {\r\n      }\r\n      this.setState(copy);\r\n    } else {\r\n      this.deletefromInsideEmailInfo(whichPart);\r\n    }\r\n  };\r\n\r\n  handleOutsideEmailInfo = (InOrOutput, whichPart) => {\r\n    if (InOrOutput === true) {\r\n      let copy = this.state;\r\n      copy.outsideEmailInfo.push(whichPart);\r\n      this.setState(copy);\r\n    } else {\r\n      this.deletefromOutsideEmailInfo(whichPart);\r\n    }\r\n  };\r\n\r\n  deletefromInsideEmailInfo = (whichToDelete) => {\r\n    let copy = this.state;\r\n    const index = copy.insideEmailInfo.indexOf(whichToDelete);\r\n    if (index > -1) {\r\n      copy.insideEmailInfo.splice(index, 1);\r\n    }\r\n    this.setState(copy);\r\n  };\r\n\r\n  deletefromOutsideEmailInfo = (whichToDelete) => {\r\n    let copy = this.state;\r\n    const index = copy.outsideEmailInfo.indexOf(whichToDelete);\r\n    if (index > -1) {\r\n      copy.outsideEmailInfo.splice(index, 1);\r\n    }\r\n    this.setState(copy);\r\n  };\r\n\r\n  handleClickedInboxButton = (whichButton, insideWhichButton) => {\r\n    let copy = this.state;\r\n    copy.insideEmailInfo.push(whichButton);\r\n    this.setState(copy);\r\n\r\n    const timer2 = setTimeout(() => {\r\n      this.deletefromInsideEmailInfo(whichButton);\r\n    }, 1050);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div onMouseMove={this.handleMouseMove} onClick={this.handleMouseClick}>\r\n          <EmailClient\r\n            clickedButton={this.handleClickedInboxButton}\r\n            inEmailScrollAmount={this.SetInEmailScrollAmount}\r\n            UserInfo={this.props.userInfo}\r\n            onNewEmail={this.handleNewCurrentEmail}\r\n            onNewInbox={this.handleNewCurrentInbox}\r\n            setInboxResult={this.handleInboxResult}\r\n            insideEmailInfo={this.handleInsideEmailInfo}\r\n            outsideEmailInfo={this.handleOutsideEmailInfo}\r\n          ></EmailClient>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracker;\r\n"]},"metadata":{},"sourceType":"module"}