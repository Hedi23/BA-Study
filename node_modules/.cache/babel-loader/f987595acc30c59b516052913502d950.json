{"ast":null,"code":"var _jsxFileName = \"/Users/Hedi/Documents/S/WS20:21/Bachelorarbeit/ryan_steimer/Deployment/Deployment/src/components/Tracker.js\";\nimport React, { Component } from \"react\";\nimport EmailClient from \"./emailClient\";\n\nclass Tracker extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUserID = () => {\n      const requestOptions = {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      fetch(\"/connect\", requestOptions).then(response => response.json()).then(data => this.setState({\n        userId: data.userID\n      })).then(() => this.props.userID(this.state.userId));\n    };\n\n    this.getNickname = () => {\n      //set nickname from props\n      let nickname = this.props.userInfo.userName;\n      this.setState({\n        userNickname: nickname\n      });\n    };\n\n    this.startTracking = () => {\n      this.collectionInterval = setInterval(this.collectStates, 250);\n      this.sendingIntervall = setInterval(this.sendData, 5000);\n    };\n\n    this.sendData = () => {\n      //Send to Server\n      const data = this.stateCollector;\n      const response = fetch(\"/data\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(this.resetCollector);\n    };\n\n    this.sendAccurcyInfo = () => {\n      //Send to Server\n      const data = this.accuracyCollector;\n      const response = fetch(\"/accuracyInfo\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(console.log(\"sent accuracy info\"));\n    };\n\n    this.collectStates = () => {\n      this.setAllInfo();\n      this.fillCollector();\n      this.resetStates();\n    };\n\n    this.setAllInfo = () => {\n      this.settingsChecker();\n      this.setGazeData();\n      this.setTimestamp();\n    };\n\n    this.setGazeData = () => {\n      window.GazeCloudAPI.OnResult = function (GazeData) {\n        window.gazeDataX = GazeData.docX;\n        window.gazeDataY = GazeData.docY;\n        window.validation = GazeData.state; // 0: valid gaze, 1 : face tracking lost, 1 : gaze data uncalibrated!\n      };\n\n      this.setState({\n        gazeX: window.gazeDataX,\n        gazeY: window.gazeDataY,\n        validationGaze: window.validation\n      });\n      this.setTransformedGazePos(this.state.gazeX, this.state.gazeY);\n    };\n\n    this.setTimestamp = () => {\n      let currentTime = new Date();\n      let newDate = currentTime.getTime();\n      this.setState({\n        timeStamp: newDate\n      });\n    };\n\n    this.fillCollector = () => {\n      this.stateCollector.push(this.state);\n    };\n\n    this.resetCollector = () => {\n      this.stateCollector = [];\n    };\n\n    this.resetStates = () => {\n      this.setState({\n        click: false,\n        clickPosXTransform: 0,\n        clickPosYTransform: 0,\n        clickPosX: 0,\n        clickPosY: 0\n      });\n    };\n\n    this.settingsChecker = () => {\n      let width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      let height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      let marginTop = window.screenTop;\n      let marginLeft = window.screenLeft;\n      let yScroll = Math.round(window.scrollY);\n      this.setState({\n        browserWidth: width,\n        browserHeight: height,\n        marginToScreenLeft: marginLeft,\n        marginToScreenTop: marginTop,\n        pageScrollY: yScroll\n      });\n      this.setTransformedMousePos(this.state.mousePosXPlain, this.state.mousePosYPlain);\n      this.setinEmailPositionY();\n    };\n\n    this.setinEmailPositionY = () => {\n      let inEmailPositionY = this.state.mousePosYPlain + this.state.inEmailScrollAmount;\n      this.setState({\n        inEmailPositionY: inEmailPositionY\n      });\n    };\n\n    this.SetInEmailScrollAmount = scrollAmount => {\n      let roundScrollAmount = Math.round(scrollAmount);\n      this.setState({\n        inEmailScrollAmount: roundScrollAmount\n      });\n    };\n\n    this.setTransformedMousePos = (x, y) => {\n      let clientWidth = 980;\n\n      if (x > this.state.browserWidth / 2 + clientWidth / 2) {\n        var xTran = (x - (this.state.browserWidth / 2 + clientWidth / 2)) * -1;\n        var yTran = y + this.state.pageScrollY;\n      } else {\n        var xTran = (this.state.browserWidth / 2 - clientWidth / 2 - x) * -1;\n        var yTran = y + this.state.pageScrollY;\n      }\n\n      this.setState({\n        mousePosXTransform: xTran,\n        mousePosYTransform: yTran\n      });\n    };\n\n    this.setTransformedGazePos = (x, y) => {\n      let clientWidth = 980;\n\n      if (x > this.state.browserWidth / 2 + clientWidth / 2) {\n        var xGazeTran = (x - (this.state.browserWidth / 2 + clientWidth / 2)) * -1;\n        var yGazeTran = y + this.state.pageScrollY;\n      } else {\n        var xGazeTran = (this.state.browserWidth / 2 - clientWidth / 2 - x) * -1;\n        var yGazeTran = y + this.state.pageScrollY;\n      }\n\n      this.setState({\n        gazeXTransform: xGazeTran,\n        gazeYTransform: yGazeTran\n      });\n    };\n\n    this.handleNewCurrentEmail = emailNr => {\n      let copy = this.state;\n      copy.currentEmail = emailNr;\n      this.setState(copy);\n    };\n\n    this.handleNewCurrentInbox = inboxType => {\n      let copy = this.state;\n      copy.currentInbox = inboxType;\n      copy.currentEmail = 0;\n      this.setState(copy);\n    };\n\n    this.handleInboxResult = finalInboxLocal => {\n      this.resultInbox.resultInbox = finalInboxLocal;\n      this.resultInbox.resultInbox.forEach(element => {\n        element.keyID = element.mail.defaultProps.keyID;\n        element.unseen = element.mail.defaultProps.unseen;\n      });\n      this.resultInbox.userID = this.state.userId;\n      this.sendFinalInbox();\n      clearInterval(this.collectionInterval);\n      clearInterval(this.sendingIntervall);\n    };\n\n    this.sendFinalInbox = () => {\n      //Send to Server\n      const data = this.resultInbox;\n      const response = fetch(\"/resultInbox\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      }).then(console.log(\"sent result Inbox\"));\n    };\n\n    this.startAccuracyTest = () => {\n      let copy = this.state;\n      copy.submitted = true;\n      this.setState(copy);\n    };\n\n    this.collectAccuracyData = (circlePos, width, height) => {\n      if (this.collectingAccuracy === false) {\n        this.accuracyIntervall = setInterval(this.fillAccuracyCollector, 100, circlePos, width, height);\n        this.collectingAccuracy = true;\n      } else {\n        clearInterval(this.accuracyIntervall);\n        this.collectingAccuracy = false;\n        this.collectAccuracyData(circlePos, width, height);\n      }\n    };\n\n    this.fillAccuracyCollector = (circlePos, width, height) => {\n      this.setGazeData();\n      let accuracyData = [this.state.userId, circlePos, this.state.gazeX, this.state.gazeY, this.state.validationGaze, width, height];\n      this.accuracyCollector.push(accuracyData);\n    };\n\n    this.stopAccuracyTest = () => {\n      this.sendAccurcyInfo();\n      window.GazeCloudAPI.StopEyeTracking();\n      clearInterval(this.accuracyIntervall);\n    };\n\n    this.handleInsideEmailInfo = (InOrOutput, whichPart) => {\n      if (InOrOutput === true) {\n        let copy = this.state;\n\n        if (whichPart.includes(\"ClickedLink\")) {\n          copy.insideEmailInfo.push(whichPart);\n          const timerForClickedLink = setTimeout(() => {\n            this.deletefromInsideEmailInfo(whichPart);\n          }, 1000);\n          this.setState(copy);\n          this.sendData();\n          return;\n        }\n\n        if (!copy.insideEmailInfo.includes(whichPart)) {\n          copy.insideEmailInfo.push(whichPart);\n        } else {}\n\n        this.setState(copy);\n      } else {\n        this.deletefromInsideEmailInfo(whichPart);\n      }\n    };\n\n    this.handleOutsideEmailInfo = (InOrOutput, whichPart) => {\n      if (InOrOutput === true) {\n        let copy = this.state;\n        copy.outsideEmailInfo.push(whichPart);\n        this.setState(copy);\n      } else {\n        this.deletefromOutsideEmailInfo(whichPart);\n      }\n    };\n\n    this.deletefromInsideEmailInfo = whichToDelete => {\n      let copy = this.state;\n      const index = copy.insideEmailInfo.indexOf(whichToDelete);\n\n      if (index > -1) {\n        copy.insideEmailInfo.splice(index, 1);\n      }\n\n      this.setState(copy);\n    };\n\n    this.deletefromOutsideEmailInfo = whichToDelete => {\n      let copy = this.state;\n      const index = copy.outsideEmailInfo.indexOf(whichToDelete);\n\n      if (index > -1) {\n        copy.outsideEmailInfo.splice(index, 1);\n      }\n\n      this.setState(copy);\n    };\n\n    this.handleClickedInboxButton = (whichButton, insideWhichButton) => {\n      let copy = this.state;\n      copy.insideEmailInfo.push(whichButton);\n      this.setState(copy);\n      const timer2 = setTimeout(() => {\n        this.deletefromInsideEmailInfo(whichButton);\n      }, 1050);\n    };\n\n    this.handleMouseMove = this.handleMouseMove.bind(this);\n    this.handleMouseClick = this.handleMouseClick.bind(this);\n    this.state = {\n      currentEmail: 0,\n      //event dependant\n      currentInbox: \"AllInbox\",\n      insideEmailInfo: [],\n      outsideEmailInfo: [],\n      //event dependant\n      mousePosXPlain: 0,\n      mousePosYPlain: 0,\n      mousePosXTransform: 0,\n      mousePosYTransform: 0,\n      click: false,\n      clickPosXTransform: 0,\n      clickPosYTransform: 0,\n      clickPosX: 0,\n      clickPosY: 0,\n      timeStamp: 0,\n      userId: 0,\n      userNickname: \"\",\n      pageScrollY: 0,\n      browserWidth: 0,\n      browserHeight: 0,\n      marginToScreenTop: 0,\n      marginToScreenLeft: 0,\n      inEmailScrollAmount: 0,\n      inEmailPositionY: 0,\n      submitted: false\n    };\n    this.resultInbox = {\n      resultInbox: [],\n      userID: 0\n    };\n    this.stateCollector = [];\n    this.collectionInterval = undefined;\n    this.sendingInterval = undefined;\n    this.accuracyCollector = [];\n    this.accuracyIntervall = undefined;\n    this.collectingAccuracy = false;\n  }\n\n  componentDidMount() {\n    this.getUserID();\n    this.getNickname();\n    this.props.userID(this.state.userId);\n  }\n\n  handleMouseMove(event) {\n    let x = event.clientX;\n    let y = event.clientY;\n    this.setState({\n      mousePosXPlain: x,\n      mousePosYPlain: y\n    });\n  }\n\n  handleMouseClick(event) {\n    let copy = this.state;\n    this.handleMouseMove(event);\n    this.setTransformedMousePos(this.state.mousePosXPlain, this.state.mousePosYPlain);\n    copy.click = true;\n    copy.clickPosX = this.state.mousePosXPlain;\n    copy.clickPosY = this.state.mousePosYPlain;\n    this.setState(copy);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onMouseMove: this.handleMouseMove,\n      onClick: this.handleMouseClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(EmailClient, {\n      clickedButton: this.handleClickedInboxButton,\n      inEmailScrollAmount: this.SetInEmailScrollAmount,\n      UserInfo: this.props.userInfo,\n      onNewEmail: this.handleNewCurrentEmail,\n      onNewInbox: this.handleNewCurrentInbox,\n      setInboxResult: this.handleInboxResult,\n      insideEmailInfo: this.handleInsideEmailInfo,\n      outsideEmailInfo: this.handleOutsideEmailInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Tracker;","map":{"version":3,"sources":["/Users/Hedi/Documents/S/WS20:21/Bachelorarbeit/ryan_steimer/Deployment/Deployment/src/components/Tracker.js"],"names":["React","Component","EmailClient","Tracker","constructor","props","getUserID","requestOptions","method","headers","fetch","then","response","json","data","setState","userId","userID","state","getNickname","nickname","userInfo","userName","userNickname","startTracking","collectionInterval","setInterval","collectStates","sendingIntervall","sendData","stateCollector","Accept","body","JSON","stringify","resetCollector","sendAccurcyInfo","accuracyCollector","console","log","setAllInfo","fillCollector","resetStates","settingsChecker","setGazeData","setTimestamp","window","GazeCloudAPI","OnResult","GazeData","gazeDataX","docX","gazeDataY","docY","validation","gazeX","gazeY","validationGaze","setTransformedGazePos","currentTime","Date","newDate","getTime","timeStamp","push","click","clickPosXTransform","clickPosYTransform","clickPosX","clickPosY","width","innerWidth","document","documentElement","clientWidth","height","innerHeight","clientHeight","marginTop","screenTop","marginLeft","screenLeft","yScroll","Math","round","scrollY","browserWidth","browserHeight","marginToScreenLeft","marginToScreenTop","pageScrollY","setTransformedMousePos","mousePosXPlain","mousePosYPlain","setinEmailPositionY","inEmailPositionY","inEmailScrollAmount","SetInEmailScrollAmount","scrollAmount","roundScrollAmount","x","y","xTran","yTran","mousePosXTransform","mousePosYTransform","xGazeTran","yGazeTran","gazeXTransform","gazeYTransform","handleNewCurrentEmail","emailNr","copy","currentEmail","handleNewCurrentInbox","inboxType","currentInbox","handleInboxResult","finalInboxLocal","resultInbox","forEach","element","keyID","mail","defaultProps","unseen","sendFinalInbox","clearInterval","startAccuracyTest","submitted","collectAccuracyData","circlePos","collectingAccuracy","accuracyIntervall","fillAccuracyCollector","accuracyData","stopAccuracyTest","StopEyeTracking","handleInsideEmailInfo","InOrOutput","whichPart","includes","insideEmailInfo","timerForClickedLink","setTimeout","deletefromInsideEmailInfo","handleOutsideEmailInfo","outsideEmailInfo","deletefromOutsideEmailInfo","whichToDelete","index","indexOf","splice","handleClickedInboxButton","whichButton","insideWhichButton","timer2","handleMouseMove","bind","handleMouseClick","undefined","sendingInterval","componentDidMount","event","clientX","clientY","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport EmailClient from \"./emailClient\";\r\n\r\nclass Tracker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMouseMove = this.handleMouseMove.bind(this);\r\n    this.handleMouseClick = this.handleMouseClick.bind(this);\r\n    this.state = {\r\n      currentEmail: 0, //event dependant\r\n      currentInbox: \"AllInbox\",\r\n      insideEmailInfo: [],\r\n      outsideEmailInfo: [], //event dependant\r\n      mousePosXPlain: 0,\r\n      mousePosYPlain: 0,\r\n      mousePosXTransform: 0,\r\n      mousePosYTransform: 0,\r\n      click: false,\r\n      clickPosXTransform: 0,\r\n      clickPosYTransform: 0,\r\n      clickPosX: 0,\r\n      clickPosY: 0,\r\n      timeStamp: 0,\r\n      userId: 0,\r\n      userNickname: \"\",\r\n      pageScrollY: 0,\r\n      browserWidth: 0,\r\n      browserHeight: 0,\r\n      marginToScreenTop: 0,\r\n      marginToScreenLeft: 0,\r\n      inEmailScrollAmount: 0,\r\n      inEmailPositionY: 0,\r\n\r\n      submitted: false,\r\n    };\r\n\r\n    this.resultInbox = { resultInbox: [], userID: 0 };\r\n    this.stateCollector = [];\r\n    this.collectionInterval = undefined;\r\n    this.sendingInterval = undefined;\r\n    this.accuracyCollector = [];\r\n    this.accuracyIntervall = undefined;\r\n    this.collectingAccuracy = false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUserID();\r\n    this.getNickname();\r\n    this.props.userID(this.state.userId);\r\n  }\r\n\r\n  getUserID = () => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    fetch(\"/connect\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ userId: data.userID }))\r\n      .then(() => this.props.userID(this.state.userId));\r\n  };\r\n\r\n  getNickname = () => {\r\n    //set nickname from props\r\n    let nickname = this.props.userInfo.userName;\r\n    this.setState({ userNickname: nickname });\r\n  };\r\n\r\n  startTracking = () => {\r\n    this.collectionInterval = setInterval(this.collectStates, 250);\r\n    this.sendingIntervall = setInterval(this.sendData, 5000);\r\n  };\r\n\r\n  sendData = () => {\r\n    //Send to Server\r\n    const data = this.stateCollector;\r\n    const response = fetch(\"/data\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then(this.resetCollector);\r\n  };\r\n\r\n  sendAccurcyInfo = () => {\r\n    //Send to Server\r\n    const data = this.accuracyCollector;\r\n    const response = fetch(\"/accuracyInfo\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then(console.log(\"sent accuracy info\"));\r\n  };\r\n\r\n  collectStates = () => {\r\n    this.setAllInfo();\r\n    this.fillCollector();\r\n    this.resetStates();\r\n  };\r\n\r\n  setAllInfo = () => {\r\n    this.settingsChecker();\r\n    this.setGazeData();\r\n    this.setTimestamp();\r\n  };\r\n\r\n  setGazeData = () => {\r\n    window.GazeCloudAPI.OnResult = function (GazeData) {\r\n      window.gazeDataX = GazeData.docX;\r\n      window.gazeDataY = GazeData.docY;\r\n      window.validation = GazeData.state; // 0: valid gaze, 1 : face tracking lost, 1 : gaze data uncalibrated!\r\n    };\r\n\r\n    this.setState({\r\n      gazeX: window.gazeDataX,\r\n      gazeY: window.gazeDataY,\r\n      validationGaze: window.validation,\r\n    });\r\n\r\n    this.setTransformedGazePos(this.state.gazeX, this.state.gazeY);\r\n  };\r\n\r\n  setTimestamp = () => {\r\n    let currentTime = new Date();\r\n    let newDate = currentTime.getTime();\r\n    this.setState({ timeStamp: newDate });\r\n  };\r\n\r\n  fillCollector = () => {\r\n    this.stateCollector.push(this.state);\r\n  };\r\n\r\n  resetCollector = () => {\r\n    this.stateCollector = [];\r\n  };\r\n\r\n  resetStates = () => {\r\n    this.setState({\r\n      click: false,\r\n      clickPosXTransform: 0,\r\n      clickPosYTransform: 0,\r\n      clickPosX: 0,\r\n      clickPosY: 0,\r\n    });\r\n  };\r\n\r\n  handleMouseMove(event) {\r\n    let x = event.clientX;\r\n    let y = event.clientY;\r\n    this.setState({ mousePosXPlain: x, mousePosYPlain: y });\r\n  }\r\n\r\n  settingsChecker = () => {\r\n    let width =\r\n      window.innerWidth ||\r\n      document.documentElement.clientWidth ||\r\n      document.body.clientWidth;\r\n\r\n    let height =\r\n      window.innerHeight ||\r\n      document.documentElement.clientHeight ||\r\n      document.body.clientHeight;\r\n\r\n    let marginTop = window.screenTop;\r\n    let marginLeft = window.screenLeft;\r\n\r\n    let yScroll = Math.round(window.scrollY);\r\n\r\n    this.setState({\r\n      browserWidth: width,\r\n      browserHeight: height,\r\n      marginToScreenLeft: marginLeft,\r\n      marginToScreenTop: marginTop,\r\n      pageScrollY: yScroll,\r\n    });\r\n\r\n    this.setTransformedMousePos(\r\n      this.state.mousePosXPlain,\r\n      this.state.mousePosYPlain\r\n    );\r\n\r\n    this.setinEmailPositionY();\r\n  };\r\n\r\n  setinEmailPositionY = () => {\r\n    let inEmailPositionY =\r\n      this.state.mousePosYPlain + this.state.inEmailScrollAmount;\r\n    this.setState({ inEmailPositionY: inEmailPositionY });\r\n  };\r\n\r\n  SetInEmailScrollAmount = (scrollAmount) => {\r\n    let roundScrollAmount = Math.round(scrollAmount);\r\n    this.setState({ inEmailScrollAmount: roundScrollAmount });\r\n  };\r\n\r\n  setTransformedMousePos = (x, y) => {\r\n    let clientWidth = 980;\r\n    if (x > this.state.browserWidth / 2 + clientWidth / 2) {\r\n      var xTran = (x - (this.state.browserWidth / 2 + clientWidth / 2)) * -1;\r\n      var yTran = y + this.state.pageScrollY;\r\n    } else {\r\n      var xTran = (this.state.browserWidth / 2 - clientWidth / 2 - x) * -1;\r\n      var yTran = y + this.state.pageScrollY;\r\n    }\r\n    this.setState({ mousePosXTransform: xTran, mousePosYTransform: yTran });\r\n  };\r\n\r\n  setTransformedGazePos = (x, y) => {\r\n    let clientWidth = 980;\r\n\r\n    if (x > this.state.browserWidth / 2 + clientWidth / 2) {\r\n      var xGazeTran =\r\n        (x - (this.state.browserWidth / 2 + clientWidth / 2)) * -1;\r\n      var yGazeTran = y + this.state.pageScrollY;\r\n    } else {\r\n      var xGazeTran = (this.state.browserWidth / 2 - clientWidth / 2 - x) * -1;\r\n      var yGazeTran = y + this.state.pageScrollY;\r\n    }\r\n    this.setState({ gazeXTransform: xGazeTran, gazeYTransform: yGazeTran });\r\n  };\r\n\r\n  handleMouseClick(event) {\r\n    let copy = this.state;\r\n    this.handleMouseMove(event);\r\n    this.setTransformedMousePos(\r\n      this.state.mousePosXPlain,\r\n      this.state.mousePosYPlain\r\n    );\r\n    copy.click = true;\r\n    copy.clickPosX = this.state.mousePosXPlain;\r\n    copy.clickPosY = this.state.mousePosYPlain;\r\n    this.setState(copy);\r\n  }\r\n\r\n  handleNewCurrentEmail = (emailNr) => {\r\n    let copy = this.state;\r\n    copy.currentEmail = emailNr;\r\n    this.setState(copy);\r\n  };\r\n\r\n  handleNewCurrentInbox = (inboxType) => {\r\n    let copy = this.state;\r\n    copy.currentInbox = inboxType;\r\n    copy.currentEmail = 0;\r\n    this.setState(copy);\r\n  };\r\n\r\n  handleInboxResult = (finalInboxLocal) => {\r\n    this.resultInbox.resultInbox = finalInboxLocal;\r\n    this.resultInbox.resultInbox.forEach((element) => {\r\n      element.keyID = element.mail.defaultProps.keyID;\r\n      element.unseen = element.mail.defaultProps.unseen;\r\n    });\r\n    this.resultInbox.userID = this.state.userId;\r\n    this.sendFinalInbox();\r\n    clearInterval(this.collectionInterval);\r\n    clearInterval(this.sendingIntervall);\r\n  };\r\n\r\n  sendFinalInbox = () => {\r\n    //Send to Server\r\n\r\n    const data = this.resultInbox;\r\n    const response = fetch(\"/resultInbox\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then(console.log(\"sent result Inbox\"));\r\n  };\r\n\r\n  startAccuracyTest = () => {\r\n    let copy = this.state;\r\n    copy.submitted = true;\r\n    this.setState(copy);\r\n  };\r\n\r\n  collectAccuracyData = (circlePos, width, height) => {\r\n    if (this.collectingAccuracy === false) {\r\n      this.accuracyIntervall = setInterval(\r\n        this.fillAccuracyCollector,\r\n        100,\r\n        circlePos,\r\n        width,\r\n        height\r\n      );\r\n      this.collectingAccuracy = true;\r\n    } else {\r\n      clearInterval(this.accuracyIntervall);\r\n      this.collectingAccuracy = false;\r\n      this.collectAccuracyData(circlePos, width, height);\r\n    }\r\n  };\r\n\r\n  fillAccuracyCollector = (circlePos, width, height) => {\r\n    this.setGazeData();\r\n    let accuracyData = [\r\n      this.state.userId,\r\n      circlePos,\r\n      this.state.gazeX,\r\n      this.state.gazeY,\r\n      this.state.validationGaze,\r\n      width,\r\n      height,\r\n    ];\r\n    this.accuracyCollector.push(accuracyData);\r\n  };\r\n\r\n  stopAccuracyTest = () => {\r\n    this.sendAccurcyInfo();\r\n    window.GazeCloudAPI.StopEyeTracking();\r\n    clearInterval(this.accuracyIntervall);\r\n  };\r\n\r\n  handleInsideEmailInfo = (InOrOutput, whichPart) => {\r\n    if (InOrOutput === true) {\r\n      let copy = this.state;\r\n      if (whichPart.includes(\"ClickedLink\")) {\r\n        copy.insideEmailInfo.push(whichPart);\r\n        const timerForClickedLink = setTimeout(() => {\r\n          this.deletefromInsideEmailInfo(whichPart);\r\n        }, 1000);\r\n        this.setState(copy);\r\n        this.sendData();\r\n        return;\r\n      }\r\n      if (!copy.insideEmailInfo.includes(whichPart)) {\r\n        copy.insideEmailInfo.push(whichPart);\r\n      } else {\r\n      }\r\n      this.setState(copy);\r\n    } else {\r\n      this.deletefromInsideEmailInfo(whichPart);\r\n    }\r\n  };\r\n\r\n  handleOutsideEmailInfo = (InOrOutput, whichPart) => {\r\n    if (InOrOutput === true) {\r\n      let copy = this.state;\r\n      copy.outsideEmailInfo.push(whichPart);\r\n      this.setState(copy);\r\n    } else {\r\n      this.deletefromOutsideEmailInfo(whichPart);\r\n    }\r\n  };\r\n\r\n  deletefromInsideEmailInfo = (whichToDelete) => {\r\n    let copy = this.state;\r\n    const index = copy.insideEmailInfo.indexOf(whichToDelete);\r\n    if (index > -1) {\r\n      copy.insideEmailInfo.splice(index, 1);\r\n    }\r\n    this.setState(copy);\r\n  };\r\n\r\n  deletefromOutsideEmailInfo = (whichToDelete) => {\r\n    let copy = this.state;\r\n    const index = copy.outsideEmailInfo.indexOf(whichToDelete);\r\n    if (index > -1) {\r\n      copy.outsideEmailInfo.splice(index, 1);\r\n    }\r\n    this.setState(copy);\r\n  };\r\n\r\n  handleClickedInboxButton = (whichButton, insideWhichButton) => {\r\n    let copy = this.state;\r\n    copy.insideEmailInfo.push(whichButton);\r\n    this.setState(copy);\r\n\r\n    const timer2 = setTimeout(() => {\r\n      this.deletefromInsideEmailInfo(whichButton);\r\n    }, 1050);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div onMouseMove={this.handleMouseMove} onClick={this.handleMouseClick}>\r\n          <EmailClient\r\n            clickedButton={this.handleClickedInboxButton}\r\n            inEmailScrollAmount={this.SetInEmailScrollAmount}\r\n            UserInfo={this.props.userInfo}\r\n            onNewEmail={this.handleNewCurrentEmail}\r\n            onNewInbox={this.handleNewCurrentInbox}\r\n            setInboxResult={this.handleInboxResult}\r\n            insideEmailInfo={this.handleInsideEmailInfo}\r\n            outsideEmailInfo={this.handleOutsideEmailInfo}\r\n          ></EmailClient>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tracker;\r\n"]},"metadata":{},"sourceType":"module"}